//
// Storytelling3View.swift
// Generated by Core Animator version 1.3.2 on 17/11/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

private class Storytelling3PassthroughView: UIView {
    override func point(inside point: CGPoint, with event: UIEvent?) -> Bool {
        for subview in subviews as [UIView] {
            if subview.point(inside: convert(point, to: subview), with: event) { return true }
        }
        return false
    }
}

@IBDesignable
class Storytelling3View : UIView, CAAnimationDelegate {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 1024, height: 768))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .scaleToFill:
				break
			case .scaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
			scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = Bundle(for:type(of: self))
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:1024, height:768)
		__scaling__.center = CGPoint(x:512.0, y:384.0)
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let movement__root = Storytelling3PassthroughView()
		let movement__xScale = Storytelling3PassthroughView()
		let movement__yScale = Storytelling3PassthroughView()
		let movement = UIImageView()
		let imgArrow = UIImage(named:"arrow.png", in: bundle, compatibleWith: nil)
		if imgArrow == nil {
			print("** Warning: Could not create image from 'arrow.png'")
		}
		movement.image = imgArrow
		movement.contentMode = .center
		movement.bounds = CGRect(x:0, y:0, width:56.0, height:16.0)
		movement__root.layer.position = CGPoint(x:908.000, y:708.000)
		movement__xScale.transform = CGAffineTransform(scaleX: 1.40, y: 1.00)
		movement__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.40)
		movement__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(movement__root)
		movement__root.addSubview(movement__xScale)
		movement__xScale.addSubview(movement__yScale)
		movement__yScale.addSubview(movement)
		__scaling__.addSubview(movement__root)
		viewsByName["Movement__root"] = movement__root
		viewsByName["Movement__xScale"] = movement__xScale
		viewsByName["Movement__yScale"] = movement__yScale
		viewsByName["Movement"] = movement

		let movementMask__root = Storytelling3PassthroughView()
		let movementMask__xScale = Storytelling3PassthroughView()
		let movementMask__yScale = Storytelling3PassthroughView()
		let movementMask = UIImageView()
		let imgGradient2 = UIImage(named:"gradient2.png", in: bundle, compatibleWith: nil)
		if imgGradient2 == nil {
			print("** Warning: Could not create image from 'gradient2.png'")
		}
		movementMask.image = imgGradient2
		movementMask.contentMode = .center
		movementMask.bounds = CGRect(x:0, y:0, width:185.0, height:118.0)
		movementMask__root.layer.position = CGPoint(x:139.000, y:5.000)
		movementMask__xScale.transform = CGAffineTransform(scaleX: 0.17, y: 1.00)
		movementMask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.06)
		movementMask__root.transform = CGAffineTransform(rotationAngle: 4.712)
		movement.addSubview(movementMask__root)
		movementMask__root.addSubview(movementMask__xScale)
		movementMask__xScale.addSubview(movementMask__yScale)
		movementMask__yScale.addSubview(movementMask)
		movement.mask = movementMask__root
		viewsByName["Movement_mask__root"] = movementMask__root
		viewsByName["Movement_mask__xScale"] = movementMask__xScale
		viewsByName["Movement_mask__yScale"] = movementMask__yScale
		viewsByName["Movement_mask"] = movementMask

		let hand__root = Storytelling3PassthroughView()
		let hand__xScale = Storytelling3PassthroughView()
		let hand__yScale = Storytelling3PassthroughView()
		let hand = UIImageView()
		let imgHand = UIImage(named:"hand.png", in: bundle, compatibleWith: nil)
		if imgHand == nil {
			print("** Warning: Could not create image from 'hand.png'")
		}
		hand.image = imgHand
		hand.contentMode = .center
		hand.bounds = CGRect(x:0, y:0, width:54.0, height:50.0)
		hand__root.layer.position = CGPoint(x:958.925, y:728.962)
		hand__xScale.transform = CGAffineTransform(scaleX: 0.00, y: 1.00)
		hand__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		hand__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(hand__root)
		hand__root.addSubview(hand__xScale)
		hand__xScale.addSubview(hand__yScale)
		hand__yScale.addSubview(hand)
		__scaling__.addSubview(hand__root)
		viewsByName["hand__root"] = hand__root
		viewsByName["hand__xScale"] = hand__xScale
		viewsByName["hand__yScale"] = hand__yScale
		viewsByName["hand"] = hand

		let fala3__root = Storytelling3PassthroughView()
		let fala3__xScale = Storytelling3PassthroughView()
		let fala3__yScale = Storytelling3PassthroughView()
		let fala3 = UIImageView()
		let imgFala3 = UIImage(named:"Fala3.png", in: bundle, compatibleWith: nil)
		if imgFala3 == nil {
			print("** Warning: Could not create image from 'Fala3.png'")
		}
		fala3.image = imgFala3
		fala3.contentMode = .center
		fala3.bounds = CGRect(x:0, y:0, width:803.0, height:194.0)
		fala3__root.layer.position = CGPoint(x:579.315, y:173.865)
		fala3__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		fala3__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		fala3__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(fala3__root)
		fala3__root.addSubview(fala3__xScale)
		fala3__xScale.addSubview(fala3__yScale)
		fala3__yScale.addSubview(fala3)
		__scaling__.addSubview(fala3__root)
		viewsByName["Fala3__root"] = fala3__root
		viewsByName["Fala3__xScale"] = fala3__xScale
		viewsByName["Fala3__yScale"] = fala3__yScale
		viewsByName["Fala3"] = fala3

		let fala3Mask__root = Storytelling3PassthroughView()
		let fala3Mask__xScale = Storytelling3PassthroughView()
		let fala3Mask__yScale = Storytelling3PassthroughView()
		let fala3Mask = UIImageView()
		fala3Mask.image = imgGradient2
		fala3Mask.contentMode = .center
		fala3Mask.bounds = CGRect(x:0, y:0, width:185.0, height:118.0)
		fala3Mask__root.layer.position = CGPoint(x:-996.768, y:101.000)
		fala3Mask__xScale.transform = CGAffineTransform(scaleX: 1.71, y: 1.00)
		fala3Mask__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 16.76)
		fala3Mask__root.transform = CGAffineTransform(rotationAngle: 4.712)
		fala3.addSubview(fala3Mask__root)
		fala3Mask__root.addSubview(fala3Mask__xScale)
		fala3Mask__xScale.addSubview(fala3Mask__yScale)
		fala3Mask__yScale.addSubview(fala3Mask)
		fala3.mask = fala3Mask__root
		viewsByName["Fala3_mask__root"] = fala3Mask__root
		viewsByName["Fala3_mask__xScale"] = fala3Mask__xScale
		viewsByName["Fala3_mask__yScale"] = fala3Mask__yScale
		viewsByName["Fala3_mask"] = fala3Mask

		let leoFalando__root = Storytelling3PassthroughView()
		let leoFalando__xScale = Storytelling3PassthroughView()
		let leoFalando__yScale = Storytelling3PassthroughView()
		let leoFalando = UIImageView()
		let imgLeoFalando = UIImage(named:"Leo falando.png", in: bundle, compatibleWith: nil)
		if imgLeoFalando == nil {
			print("** Warning: Could not create image from 'Leo falando.png'")
		}
		leoFalando.image = imgLeoFalando
		leoFalando.contentMode = .center
		leoFalando.bounds = CGRect(x:0, y:0, width:170.0, height:179.0)
		leoFalando__root.layer.position = CGPoint(x:115.000, y:130.000)
		leoFalando__xScale.transform = CGAffineTransform(scaleX: 0.00, y: 1.00)
		leoFalando__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		leoFalando__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(leoFalando__root)
		leoFalando__root.addSubview(leoFalando__xScale)
		leoFalando__xScale.addSubview(leoFalando__yScale)
		leoFalando__yScale.addSubview(leoFalando)
		__scaling__.addSubview(leoFalando__root)
		viewsByName["Leo falando__root"] = leoFalando__root
		viewsByName["Leo falando__xScale"] = leoFalando__xScale
		viewsByName["Leo falando__yScale"] = leoFalando__yScale
		viewsByName["Leo falando"] = leoFalando

		let arrow__root = Storytelling3PassthroughView()
		let arrow__xScale = Storytelling3PassthroughView()
		let arrow__yScale = Storytelling3PassthroughView()
		let arrow = UIImageView()
		arrow.image = imgArrow
		arrow.contentMode = .center
		arrow.bounds = CGRect(x:0, y:0, width:56.0, height:16.0)
		arrow__root.layer.position = CGPoint(x:1052.823, y:672.536)
		arrow__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		arrow__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		arrow__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(arrow__root)
		arrow__root.addSubview(arrow__xScale)
		arrow__xScale.addSubview(arrow__yScale)
		arrow__yScale.addSubview(arrow)
		__scaling__.addSubview(arrow__root)
		viewsByName["arrow__root"] = arrow__root
		viewsByName["arrow__xScale"] = arrow__xScale
		viewsByName["arrow__yScale"] = arrow__yScale
		viewsByName["arrow"] = arrow

		let leo__root = Storytelling3PassthroughView()
		let leo__xScale = Storytelling3PassthroughView()
		let leo__yScale = Storytelling3PassthroughView()
		let leo = UIView()
		leo.bounds = CGRect(x:0, y:0, width:362.4, height:428.8)
		leo__root.layer.position = CGPoint(x:300.000, y:500.000)
		leo__root.alpha = 0.00
		leo__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		leo__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		leo__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(leo__root)
		leo__root.addSubview(leo__xScale)
		leo__xScale.addSubview(leo__yScale)
		leo__yScale.addSubview(leo)
		__scaling__.addSubview(leo__root)
		viewsByName["Leo__root"] = leo__root
		viewsByName["Leo__xScale"] = leo__xScale
		viewsByName["Leo__yScale"] = leo__yScale
		viewsByName["Leo"] = leo

		let leoSorrindo__root = Storytelling3PassthroughView()
		let leoSorrindo__xScale = Storytelling3PassthroughView()
		let leoSorrindo__yScale = Storytelling3PassthroughView()
		let leoSorrindo = UIImageView()
		let imgLeoSorrindo = UIImage(named:"Leo sorrindo.png", in: bundle, compatibleWith: nil)
		if imgLeoSorrindo == nil {
			print("** Warning: Could not create image from 'Leo sorrindo.png'")
		}
		leoSorrindo.image = imgLeoSorrindo
		leoSorrindo.contentMode = .center
		leoSorrindo.bounds = CGRect(x:0, y:0, width:453.0, height:536.0)
		leoSorrindo__root.layer.position = CGPoint(x:181.200, y:214.400)
		leoSorrindo__xScale.transform = CGAffineTransform(scaleX: 0.80, y: 1.00)
		leoSorrindo__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.80)
		leoSorrindo__root.transform = CGAffineTransform(rotationAngle: 0.000)
		leo.addSubview(leoSorrindo__root)
		leoSorrindo__root.addSubview(leoSorrindo__xScale)
		leoSorrindo__xScale.addSubview(leoSorrindo__yScale)
		leoSorrindo__yScale.addSubview(leoSorrindo)
		leo.addSubview(leoSorrindo__root)
		viewsByName["Leo sorrindo__root"] = leoSorrindo__root
		viewsByName["Leo sorrindo__xScale"] = leoSorrindo__xScale
		viewsByName["Leo sorrindo__yScale"] = leoSorrindo__yScale
		viewsByName["Leo sorrindo"] = leoSorrindo

		let leoMachucado__root = Storytelling3PassthroughView()
		let leoMachucado__xScale = Storytelling3PassthroughView()
		let leoMachucado__yScale = Storytelling3PassthroughView()
		let leoMachucado = UIImageView()
		let imgLeoMachucado = UIImage(named:"Leo machucado.png", in: bundle, compatibleWith: nil)
		if imgLeoMachucado == nil {
			print("** Warning: Could not create image from 'Leo machucado.png'")
		}
		leoMachucado.image = imgLeoMachucado
		leoMachucado.contentMode = .center
		leoMachucado.bounds = CGRect(x:0, y:0, width:452.0, height:536.0)
		leoMachucado__root.layer.position = CGPoint(x:181.200, y:214.400)
		leoMachucado__xScale.transform = CGAffineTransform(scaleX: 0.80, y: 1.00)
		leoMachucado__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.80)
		leoMachucado__root.transform = CGAffineTransform(rotationAngle: 0.000)
		leo.addSubview(leoMachucado__root)
		leoMachucado__root.addSubview(leoMachucado__xScale)
		leoMachucado__xScale.addSubview(leoMachucado__yScale)
		leoMachucado__yScale.addSubview(leoMachucado)
		leo.addSubview(leoMachucado__root)
		viewsByName["Leo machucado__root"] = leoMachucado__root
		viewsByName["Leo machucado__xScale"] = leoMachucado__xScale
		viewsByName["Leo machucado__yScale"] = leoMachucado__yScale
		viewsByName["Leo machucado"] = leoMachucado

		let machucado2__root = Storytelling3PassthroughView()
		let machucado2__xScale = Storytelling3PassthroughView()
		let machucado2__yScale = Storytelling3PassthroughView()
		let machucado2 = UIView()
		machucado2.bounds = CGRect(x:0, y:0, width:14.8, height:21.6)
		machucado2__root.layer.position = CGPoint(x:210.393, y:564.288)
		machucado2__root.alpha = 0.00
		machucado2__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucado2__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucado2__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(machucado2__root)
		machucado2__root.addSubview(machucado2__xScale)
		machucado2__xScale.addSubview(machucado2__yScale)
		machucado2__yScale.addSubview(machucado2)
		__scaling__.addSubview(machucado2__root)
		viewsByName["Machucado 2__root"] = machucado2__root
		viewsByName["Machucado 2__xScale"] = machucado2__xScale
		viewsByName["Machucado 2__yScale"] = machucado2__yScale
		viewsByName["Machucado 2"] = machucado2

		let machucadoBom__root = Storytelling3PassthroughView()
		let machucadoBom__xScale = Storytelling3PassthroughView()
		let machucadoBom__yScale = Storytelling3PassthroughView()
		let machucadoBom = UIImageView()
		let imgMachucadoBom = UIImage(named:"Machucado bom.png", in: bundle, compatibleWith: nil)
		if imgMachucadoBom == nil {
			print("** Warning: Could not create image from 'Machucado bom.png'")
		}
		machucadoBom.image = imgMachucadoBom
		machucadoBom.contentMode = .center
		machucadoBom.bounds = CGRect(x:0, y:0, width:14.0, height:21.0)
		machucadoBom__root.layer.position = CGPoint(x:7.000, y:10.500)
		machucadoBom__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucadoBom__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucadoBom__root.transform = CGAffineTransform(rotationAngle: 0.000)
		machucado2.addSubview(machucadoBom__root)
		machucadoBom__root.addSubview(machucadoBom__xScale)
		machucadoBom__xScale.addSubview(machucadoBom__yScale)
		machucadoBom__yScale.addSubview(machucadoBom)
		machucado2.addSubview(machucadoBom__root)
		viewsByName["Machucado bom__root"] = machucadoBom__root
		viewsByName["Machucado bom__xScale"] = machucadoBom__xScale
		viewsByName["Machucado bom__yScale"] = machucadoBom__yScale
		viewsByName["Machucado bom"] = machucadoBom

		let machucado__root = Storytelling3PassthroughView()
		let machucado__xScale = Storytelling3PassthroughView()
		let machucado__yScale = Storytelling3PassthroughView()
		let machucado = UIImageView()
		let imgMachucado = UIImage(named:"Machucado.png", in: bundle, compatibleWith: nil)
		if imgMachucado == nil {
			print("** Warning: Could not create image from 'Machucado.png'")
		}
		machucado.image = imgMachucado
		machucado.contentMode = .center
		machucado.layer.anchorPoint = CGPoint(x:0.458, y:0.497)
		machucado.bounds = CGRect(x:0, y:0, width:14.0, height:21.0)
		machucado__root.layer.position = CGPoint(x:7.195, y:11.005)
		machucado__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucado__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		machucado__root.transform = CGAffineTransform(rotationAngle: 0.000)
		machucado2.addSubview(machucado__root)
		machucado__root.addSubview(machucado__xScale)
		machucado__xScale.addSubview(machucado__yScale)
		machucado__yScale.addSubview(machucado)
		machucado2.addSubview(machucado__root)
		viewsByName["Machucado__root"] = machucado__root
		viewsByName["Machucado__xScale"] = machucado__xScale
		viewsByName["Machucado__yScale"] = machucado__yScale
		viewsByName["Machucado"] = machucado

		let tela1__root = Storytelling3PassthroughView()
		let tela1__xScale = Storytelling3PassthroughView()
		let tela1__yScale = Storytelling3PassthroughView()
		let tela1 = UIImageView()
		let imgTela1 = UIImage(named:"Tela1.png", in: bundle, compatibleWith: nil)
		if imgTela1 == nil {
			print("** Warning: Could not create image from 'Tela1.png'")
		}
		tela1.image = imgTela1
		tela1.contentMode = .center
		tela1.bounds = CGRect(x:0, y:0, width:364.0, height:328.0)
		tela1__root.layer.position = CGPoint(x:733.352, y:499.328)
		tela1__root.alpha = 0.00
		tela1__xScale.transform = CGAffineTransform(scaleX: 1.10, y: 1.00)
		tela1__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.10)
		tela1__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(tela1__root)
		tela1__root.addSubview(tela1__xScale)
		tela1__xScale.addSubview(tela1__yScale)
		tela1__yScale.addSubview(tela1)
		__scaling__.addSubview(tela1__root)
		viewsByName["Tela1__root"] = tela1__root
		viewsByName["Tela1__xScale"] = tela1__xScale
		viewsByName["Tela1__yScale"] = tela1__yScale
		viewsByName["Tela1"] = tela1

		let rectangle203__root = Storytelling3PassthroughView()
		let rectangle203__xScale = Storytelling3PassthroughView()
		let rectangle203__yScale = Storytelling3PassthroughView()
		let rectangle203 = UIImageView()
		let imgRectangle203 = UIImage(named:"Rectangle 203.png", in: bundle, compatibleWith: nil)
		if imgRectangle203 == nil {
			print("** Warning: Could not create image from 'Rectangle 203.png'")
		}
		rectangle203.image = imgRectangle203
		rectangle203.contentMode = .center
		rectangle203.bounds = CGRect(x:0, y:0, width:67.0, height:48.0)
		rectangle203__root.layer.position = CGPoint(x:750.930, y:465.247)
		rectangle203__root.alpha = 0.00
		rectangle203__xScale.transform = CGAffineTransform(scaleX: 1.10, y: 1.00)
		rectangle203__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.10)
		rectangle203__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(rectangle203__root)
		rectangle203__root.addSubview(rectangle203__xScale)
		rectangle203__xScale.addSubview(rectangle203__yScale)
		rectangle203__yScale.addSubview(rectangle203)
		__scaling__.addSubview(rectangle203__root)
		viewsByName["Rectangle 203__root"] = rectangle203__root
		viewsByName["Rectangle 203__xScale"] = rectangle203__xScale
		viewsByName["Rectangle 203__yScale"] = rectangle203__yScale
		viewsByName["Rectangle 203"] = rectangle203

		let sangueCopy__root = Storytelling3PassthroughView()
		let sangueCopy__xScale = Storytelling3PassthroughView()
		let sangueCopy__yScale = Storytelling3PassthroughView()
		let sangueCopy = UIImageView()
		let imgSangueCopy = UIImage(named:"Sangue Copy.png", in: bundle, compatibleWith: nil)
		if imgSangueCopy == nil {
			print("** Warning: Could not create image from 'Sangue Copy.png'")
		}
		sangueCopy.image = imgSangueCopy
		sangueCopy.contentMode = .center
		sangueCopy.bounds = CGRect(x:0, y:0, width:106.0, height:96.0)
		sangueCopy__root.layer.position = CGPoint(x:749.046, y:430.000)
		sangueCopy__xScale.transform = CGAffineTransform(scaleX: 0.00, y: 1.00)
		sangueCopy__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		sangueCopy__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(sangueCopy__root)
		sangueCopy__root.addSubview(sangueCopy__xScale)
		sangueCopy__xScale.addSubview(sangueCopy__yScale)
		sangueCopy__yScale.addSubview(sangueCopy)
		__scaling__.addSubview(sangueCopy__root)
		viewsByName["Sangue Copy__root"] = sangueCopy__root
		viewsByName["Sangue Copy__xScale"] = sangueCopy__xScale
		viewsByName["Sangue Copy__yScale"] = sangueCopy__yScale
		viewsByName["Sangue Copy"] = sangueCopy

		let soldados__root = Storytelling3PassthroughView()
		let soldados__xScale = Storytelling3PassthroughView()
		let soldados__yScale = Storytelling3PassthroughView()
		let soldados = UIView()
		soldados.bounds = CGRect(x:0, y:0, width:369.0, height:241.6)
		soldados__root.layer.position = CGPoint(x:733.925, y:556.061)
		soldados__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldados__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldados__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(soldados__root)
		soldados__root.addSubview(soldados__xScale)
		soldados__xScale.addSubview(soldados__yScale)
		soldados__yScale.addSubview(soldados)
		__scaling__.addSubview(soldados__root)
		viewsByName["Soldados__root"] = soldados__root
		viewsByName["Soldados__xScale"] = soldados__xScale
		viewsByName["Soldados__yScale"] = soldados__yScale
		viewsByName["Soldados"] = soldados

		let soldadinhoCopy7__root = Storytelling3PassthroughView()
		let soldadinhoCopy7__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy7__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy7 = UIImageView()
		let imgSoldadinhoCopy7 = UIImage(named:"Soldadinho Copy 7.png", in: bundle, compatibleWith: nil)
		if imgSoldadinhoCopy7 == nil {
			print("** Warning: Could not create image from 'Soldadinho Copy 7.png'")
		}
		soldadinhoCopy7.image = imgSoldadinhoCopy7
		soldadinhoCopy7.contentMode = .center
		soldadinhoCopy7.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy7__root.layer.position = CGPoint(x:76.328, y:121.301)
		soldadinhoCopy7__root.alpha = 0.00
		soldadinhoCopy7__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy7__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy7__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy7__root)
		soldadinhoCopy7__root.addSubview(soldadinhoCopy7__xScale)
		soldadinhoCopy7__xScale.addSubview(soldadinhoCopy7__yScale)
		soldadinhoCopy7__yScale.addSubview(soldadinhoCopy7)
		soldados.addSubview(soldadinhoCopy7__root)
		viewsByName["Soldadinho Copy 7__root"] = soldadinhoCopy7__root
		viewsByName["Soldadinho Copy 7__xScale"] = soldadinhoCopy7__xScale
		viewsByName["Soldadinho Copy 7__yScale"] = soldadinhoCopy7__yScale
		viewsByName["Soldadinho Copy 7"] = soldadinhoCopy7

		let soldadinhoCopy__root = Storytelling3PassthroughView()
		let soldadinhoCopy__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy = UIImageView()
		soldadinhoCopy.image = imgSoldadinhoCopy7
		soldadinhoCopy.contentMode = .center
		soldadinhoCopy.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy__root.layer.position = CGPoint(x:21.426, y:157.752)
		soldadinhoCopy__root.alpha = 0.00
		soldadinhoCopy__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy__root)
		soldadinhoCopy__root.addSubview(soldadinhoCopy__xScale)
		soldadinhoCopy__xScale.addSubview(soldadinhoCopy__yScale)
		soldadinhoCopy__yScale.addSubview(soldadinhoCopy)
		soldados.addSubview(soldadinhoCopy__root)
		viewsByName["Soldadinho Copy__root"] = soldadinhoCopy__root
		viewsByName["Soldadinho Copy__xScale"] = soldadinhoCopy__xScale
		viewsByName["Soldadinho Copy__yScale"] = soldadinhoCopy__yScale
		viewsByName["Soldadinho Copy"] = soldadinhoCopy

		let soldadinhoCopy2__root = Storytelling3PassthroughView()
		let soldadinhoCopy2__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy2__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy2 = UIImageView()
		soldadinhoCopy2.image = imgSoldadinhoCopy7
		soldadinhoCopy2.contentMode = .center
		soldadinhoCopy2.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy2__root.layer.position = CGPoint(x:106.446, y:67.920)
		soldadinhoCopy2__root.alpha = 0.00
		soldadinhoCopy2__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy2__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy2__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy2__root)
		soldadinhoCopy2__root.addSubview(soldadinhoCopy2__xScale)
		soldadinhoCopy2__xScale.addSubview(soldadinhoCopy2__yScale)
		soldadinhoCopy2__yScale.addSubview(soldadinhoCopy2)
		soldados.addSubview(soldadinhoCopy2__root)
		viewsByName["Soldadinho Copy 2__root"] = soldadinhoCopy2__root
		viewsByName["Soldadinho Copy 2__xScale"] = soldadinhoCopy2__xScale
		viewsByName["Soldadinho Copy 2__yScale"] = soldadinhoCopy2__yScale
		viewsByName["Soldadinho Copy 2"] = soldadinhoCopy2

		let soldadinhoCopy3__root = Storytelling3PassthroughView()
		let soldadinhoCopy3__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy3__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy3 = UIImageView()
		soldadinhoCopy3.image = imgSoldadinhoCopy7
		soldadinhoCopy3.contentMode = .center
		soldadinhoCopy3.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy3__root.layer.position = CGPoint(x:212.531, y:116.808)
		soldadinhoCopy3__root.alpha = 0.00
		soldadinhoCopy3__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy3__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy3__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy3__root)
		soldadinhoCopy3__root.addSubview(soldadinhoCopy3__xScale)
		soldadinhoCopy3__xScale.addSubview(soldadinhoCopy3__yScale)
		soldadinhoCopy3__yScale.addSubview(soldadinhoCopy3)
		soldados.addSubview(soldadinhoCopy3__root)
		viewsByName["Soldadinho Copy 3__root"] = soldadinhoCopy3__root
		viewsByName["Soldadinho Copy 3__xScale"] = soldadinhoCopy3__xScale
		viewsByName["Soldadinho Copy 3__yScale"] = soldadinhoCopy3__yScale
		viewsByName["Soldadinho Copy 3"] = soldadinhoCopy3

		let soldadinhoCopy4__root = Storytelling3PassthroughView()
		let soldadinhoCopy4__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy4__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy4 = UIImageView()
		soldadinhoCopy4.image = imgSoldadinhoCopy7
		soldadinhoCopy4.contentMode = .center
		soldadinhoCopy4.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy4__root.layer.position = CGPoint(x:287.750, y:61.607)
		soldadinhoCopy4__root.alpha = 0.00
		soldadinhoCopy4__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy4__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy4__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy4__root)
		soldadinhoCopy4__root.addSubview(soldadinhoCopy4__xScale)
		soldadinhoCopy4__xScale.addSubview(soldadinhoCopy4__yScale)
		soldadinhoCopy4__yScale.addSubview(soldadinhoCopy4)
		soldados.addSubview(soldadinhoCopy4__root)
		viewsByName["Soldadinho Copy 4__root"] = soldadinhoCopy4__root
		viewsByName["Soldadinho Copy 4__xScale"] = soldadinhoCopy4__xScale
		viewsByName["Soldadinho Copy 4__yScale"] = soldadinhoCopy4__yScale
		viewsByName["Soldadinho Copy 4"] = soldadinhoCopy4

		let soldadinhoCopy5__root = Storytelling3PassthroughView()
		let soldadinhoCopy5__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy5__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy5 = UIImageView()
		soldadinhoCopy5.image = imgSoldadinhoCopy7
		soldadinhoCopy5.contentMode = .center
		soldadinhoCopy5.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy5__root.layer.position = CGPoint(x:317.743, y:9.500)
		soldadinhoCopy5__root.alpha = 0.00
		soldadinhoCopy5__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy5__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy5__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy5__root)
		soldadinhoCopy5__root.addSubview(soldadinhoCopy5__xScale)
		soldadinhoCopy5__xScale.addSubview(soldadinhoCopy5__yScale)
		soldadinhoCopy5__yScale.addSubview(soldadinhoCopy5)
		soldados.addSubview(soldadinhoCopy5__root)
		viewsByName["Soldadinho Copy 5__root"] = soldadinhoCopy5__root
		viewsByName["Soldadinho Copy 5__xScale"] = soldadinhoCopy5__xScale
		viewsByName["Soldadinho Copy 5__yScale"] = soldadinhoCopy5__yScale
		viewsByName["Soldadinho Copy 5"] = soldadinhoCopy5

		let soldadinhoCopy6__root = Storytelling3PassthroughView()
		let soldadinhoCopy6__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy6__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy6 = UIImageView()
		soldadinhoCopy6.image = imgSoldadinhoCopy7
		soldadinhoCopy6.contentMode = .center
		soldadinhoCopy6.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy6__root.layer.position = CGPoint(x:184.826, y:190.362)
		soldadinhoCopy6__root.alpha = 0.00
		soldadinhoCopy6__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy6__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy6__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy6__root)
		soldadinhoCopy6__root.addSubview(soldadinhoCopy6__xScale)
		soldadinhoCopy6__xScale.addSubview(soldadinhoCopy6__yScale)
		soldadinhoCopy6__yScale.addSubview(soldadinhoCopy6)
		soldados.addSubview(soldadinhoCopy6__root)
		viewsByName["Soldadinho Copy 6__root"] = soldadinhoCopy6__root
		viewsByName["Soldadinho Copy 6__xScale"] = soldadinhoCopy6__xScale
		viewsByName["Soldadinho Copy 6__yScale"] = soldadinhoCopy6__yScale
		viewsByName["Soldadinho Copy 6"] = soldadinhoCopy6

		let soldadinhoCopy8__root = Storytelling3PassthroughView()
		let soldadinhoCopy8__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy8__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy8 = UIImageView()
		soldadinhoCopy8.image = imgSoldadinhoCopy7
		soldadinhoCopy8.contentMode = .center
		soldadinhoCopy8.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy8__root.layer.position = CGPoint(x:88.109, y:177.029)
		soldadinhoCopy8__root.alpha = 0.00
		soldadinhoCopy8__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy8__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy8__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy8__root)
		soldadinhoCopy8__root.addSubview(soldadinhoCopy8__xScale)
		soldadinhoCopy8__xScale.addSubview(soldadinhoCopy8__yScale)
		soldadinhoCopy8__yScale.addSubview(soldadinhoCopy8)
		soldados.addSubview(soldadinhoCopy8__root)
		viewsByName["Soldadinho Copy 8__root"] = soldadinhoCopy8__root
		viewsByName["Soldadinho Copy 8__xScale"] = soldadinhoCopy8__xScale
		viewsByName["Soldadinho Copy 8__yScale"] = soldadinhoCopy8__yScale
		viewsByName["Soldadinho Copy 8"] = soldadinhoCopy8

		let soldadinhoCopy9__root = Storytelling3PassthroughView()
		let soldadinhoCopy9__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy9__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy9 = UIImageView()
		soldadinhoCopy9.image = imgSoldadinhoCopy7
		soldadinhoCopy9.contentMode = .center
		soldadinhoCopy9.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy9__root.layer.position = CGPoint(x:28.047, y:232.092)
		soldadinhoCopy9__root.alpha = 0.00
		soldadinhoCopy9__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy9__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy9__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy9__root)
		soldadinhoCopy9__root.addSubview(soldadinhoCopy9__xScale)
		soldadinhoCopy9__xScale.addSubview(soldadinhoCopy9__yScale)
		soldadinhoCopy9__yScale.addSubview(soldadinhoCopy9)
		soldados.addSubview(soldadinhoCopy9__root)
		viewsByName["Soldadinho Copy 9__root"] = soldadinhoCopy9__root
		viewsByName["Soldadinho Copy 9__xScale"] = soldadinhoCopy9__xScale
		viewsByName["Soldadinho Copy 9__yScale"] = soldadinhoCopy9__yScale
		viewsByName["Soldadinho Copy 9"] = soldadinhoCopy9

		let soldadinhoCopy10__root = Storytelling3PassthroughView()
		let soldadinhoCopy10__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy10__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy10 = UIImageView()
		soldadinhoCopy10.image = imgSoldadinhoCopy7
		soldadinhoCopy10.contentMode = .center
		soldadinhoCopy10.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy10__root.layer.position = CGPoint(x:9.500, y:93.243)
		soldadinhoCopy10__root.alpha = 0.00
		soldadinhoCopy10__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy10__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy10__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy10__root)
		soldadinhoCopy10__root.addSubview(soldadinhoCopy10__xScale)
		soldadinhoCopy10__xScale.addSubview(soldadinhoCopy10__yScale)
		soldadinhoCopy10__yScale.addSubview(soldadinhoCopy10)
		soldados.addSubview(soldadinhoCopy10__root)
		viewsByName["Soldadinho Copy 10__root"] = soldadinhoCopy10__root
		viewsByName["Soldadinho Copy 10__xScale"] = soldadinhoCopy10__xScale
		viewsByName["Soldadinho Copy 10__yScale"] = soldadinhoCopy10__yScale
		viewsByName["Soldadinho Copy 10"] = soldadinhoCopy10

		let soldadinhoCopy11__root = Storytelling3PassthroughView()
		let soldadinhoCopy11__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy11__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy11 = UIImageView()
		soldadinhoCopy11.image = imgSoldadinhoCopy7
		soldadinhoCopy11.contentMode = .center
		soldadinhoCopy11.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy11__root.layer.position = CGPoint(x:259.067, y:167.473)
		soldadinhoCopy11__root.alpha = 0.00
		soldadinhoCopy11__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy11__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy11__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy11__root)
		soldadinhoCopy11__root.addSubview(soldadinhoCopy11__xScale)
		soldadinhoCopy11__xScale.addSubview(soldadinhoCopy11__yScale)
		soldadinhoCopy11__yScale.addSubview(soldadinhoCopy11)
		soldados.addSubview(soldadinhoCopy11__root)
		viewsByName["Soldadinho Copy 11__root"] = soldadinhoCopy11__root
		viewsByName["Soldadinho Copy 11__xScale"] = soldadinhoCopy11__xScale
		viewsByName["Soldadinho Copy 11__yScale"] = soldadinhoCopy11__yScale
		viewsByName["Soldadinho Copy 11"] = soldadinhoCopy11

		let soldadinhoCopy12__root = Storytelling3PassthroughView()
		let soldadinhoCopy12__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy12__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy12 = UIImageView()
		soldadinhoCopy12.image = imgSoldadinhoCopy7
		soldadinhoCopy12.contentMode = .center
		soldadinhoCopy12.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy12__root.layer.position = CGPoint(x:304.292, y:118.571)
		soldadinhoCopy12__root.alpha = 0.00
		soldadinhoCopy12__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy12__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy12__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy12__root)
		soldadinhoCopy12__root.addSubview(soldadinhoCopy12__xScale)
		soldadinhoCopy12__xScale.addSubview(soldadinhoCopy12__yScale)
		soldadinhoCopy12__yScale.addSubview(soldadinhoCopy12)
		soldados.addSubview(soldadinhoCopy12__root)
		viewsByName["Soldadinho Copy 12__root"] = soldadinhoCopy12__root
		viewsByName["Soldadinho Copy 12__xScale"] = soldadinhoCopy12__xScale
		viewsByName["Soldadinho Copy 12__yScale"] = soldadinhoCopy12__yScale
		viewsByName["Soldadinho Copy 12"] = soldadinhoCopy12

		let soldadinhoCopy13__root = Storytelling3PassthroughView()
		let soldadinhoCopy13__xScale = Storytelling3PassthroughView()
		let soldadinhoCopy13__yScale = Storytelling3PassthroughView()
		let soldadinhoCopy13 = UIImageView()
		soldadinhoCopy13.image = imgSoldadinhoCopy7
		soldadinhoCopy13.contentMode = .center
		soldadinhoCopy13.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy13__root.layer.position = CGPoint(x:359.516, y:143.842)
		soldadinhoCopy13__root.alpha = 0.00
		soldadinhoCopy13__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy13__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		soldadinhoCopy13__root.transform = CGAffineTransform(rotationAngle: 0.000)
		soldados.addSubview(soldadinhoCopy13__root)
		soldadinhoCopy13__root.addSubview(soldadinhoCopy13__xScale)
		soldadinhoCopy13__xScale.addSubview(soldadinhoCopy13__yScale)
		soldadinhoCopy13__yScale.addSubview(soldadinhoCopy13)
		soldados.addSubview(soldadinhoCopy13__root)
		viewsByName["Soldadinho Copy 13__root"] = soldadinhoCopy13__root
		viewsByName["Soldadinho Copy 13__xScale"] = soldadinhoCopy13__xScale
		viewsByName["Soldadinho Copy 13__yScale"] = soldadinhoCopy13__yScale
		viewsByName["Soldadinho Copy 13"] = soldadinhoCopy13

		let machucadoCabeça__root = Storytelling3PassthroughView()
		let machucadoCabeça__xScale = Storytelling3PassthroughView()
		let machucadoCabeça__yScale = Storytelling3PassthroughView()
		let machucadoCabeça = UIImageView()
		let imgMachucadoCabeça = UIImage(named:"Machucado cabeça.png", in: bundle, compatibleWith: nil)
		if imgMachucadoCabeça == nil {
			print("** Warning: Could not create image from 'Machucado cabeça.png'")
		}
		machucadoCabeça.image = imgMachucadoCabeça
		machucadoCabeça.contentMode = .center
		machucadoCabeça.bounds = CGRect(x:0, y:0, width:34.0, height:33.0)
		machucadoCabeça__root.layer.position = CGPoint(x:323.000, y:375.000)
		machucadoCabeça__xScale.transform = CGAffineTransform(scaleX: 0.00, y: 1.00)
		machucadoCabeça__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.00)
		machucadoCabeça__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(machucadoCabeça__root)
		machucadoCabeça__root.addSubview(machucadoCabeça__xScale)
		machucadoCabeça__xScale.addSubview(machucadoCabeça__yScale)
		machucadoCabeça__yScale.addSubview(machucadoCabeça)
		__scaling__.addSubview(machucadoCabeça__root)
		viewsByName["Machucado cabeça__root"] = machucadoCabeça__root
		viewsByName["Machucado cabeça__xScale"] = machucadoCabeça__xScale
		viewsByName["Machucado cabeça__yScale"] = machucadoCabeça__yScale
		viewsByName["Machucado cabeça"] = machucadoCabeça

		self.viewsByName = viewsByName
	}

	// - MARK: story2

	func addStory2Animation() {
		addStory2Animation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addStory2Animation(completion: ((Bool) -> Void)?) {
		addStory2Animation(beginTime: 0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addStory2Animation(removedOnCompletion: Bool) {
		addStory2Animation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addStory2Animation(removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addStory2Animation(beginTime: 0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addStory2Animation(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		let easeInOutTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseInEaseOut)
		let anticOverTiming = CAMediaTimingFunction(controlPoints: 0.42, -0.30, 0.58, 1.30)
		let instantTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionDefault)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 15.000
			representativeAnimation.delegate = self
			self.layer.add(representativeAnimation, forKey: "Story2")
			self.animationCompletions[layer.animation(forKey: "Story2")!] = complete
		}

		let fala3ImageContentsAnimation = CAKeyframeAnimation(keyPath: "contents")
		fala3ImageContentsAnimation.duration = 15.000
		fala3ImageContentsAnimation.values = [UIImage(named: "Fala3.png")!.cgImage!, UIImage(named: "Fala3.png")!.cgImage!, UIImage(named: "Fala5.png")!.cgImage!, UIImage(named: "Fala5.png")!.cgImage!, UIImage(named: "Fala5.png")!.cgImage!] as [CGImage]
		fala3ImageContentsAnimation.keyTimes = [0.000, 0.367, 0.367, 1.000, 1.000] as [NSNumber]
		fala3ImageContentsAnimation.timingFunctions = [instantTiming, instantTiming, instantTiming, instantTiming]
		fala3ImageContentsAnimation.beginTime = beginTime
		fala3ImageContentsAnimation.fillMode = fillMode
		fala3ImageContentsAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3"]?.layer.add(fala3ImageContentsAnimation, forKey:"story2_ImageContents")

		let leoFalandoScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		leoFalandoScaleXAnimation.duration = 15.000
		leoFalandoScaleXAnimation.values = [0.000, 0.800, 0.700, 0.700] as [Float]
		leoFalandoScaleXAnimation.keyTimes = [0.000, 0.020, 0.027, 1.000] as [NSNumber]
		leoFalandoScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoFalandoScaleXAnimation.beginTime = beginTime
		leoFalandoScaleXAnimation.fillMode = fillMode
		leoFalandoScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Leo falando__xScale"]?.layer.add(leoFalandoScaleXAnimation, forKey:"story2_ScaleX")

		let leoFalandoScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		leoFalandoScaleYAnimation.duration = 15.000
		leoFalandoScaleYAnimation.values = [0.000, 0.800, 0.700, 0.700] as [Float]
		leoFalandoScaleYAnimation.keyTimes = [0.000, 0.020, 0.027, 1.000] as [NSNumber]
		leoFalandoScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoFalandoScaleYAnimation.beginTime = beginTime
		leoFalandoScaleYAnimation.fillMode = fillMode
		leoFalandoScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Leo falando__yScale"]?.layer.add(leoFalandoScaleYAnimation, forKey:"story2_ScaleY")

		let soldadinhoCopyOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopyOpacityAnimation.duration = 15.000
		soldadinhoCopyOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopyOpacityAnimation.keyTimes = [0.000, 0.278, 0.287, 1.000] as [NSNumber]
		soldadinhoCopyOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopyOpacityAnimation.beginTime = beginTime
		soldadinhoCopyOpacityAnimation.fillMode = fillMode
		soldadinhoCopyOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy__root"]?.layer.add(soldadinhoCopyOpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopyTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopyTranslationXAnimation.duration = 15.000
		soldadinhoCopyTranslationXAnimation.values = [0.000, 0.000, 165.144, 165.144] as [Float]
		soldadinhoCopyTranslationXAnimation.keyTimes = [0.000, 0.475, 0.525, 1.000] as [NSNumber]
		soldadinhoCopyTranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopyTranslationXAnimation.beginTime = beginTime
		soldadinhoCopyTranslationXAnimation.fillMode = fillMode
		soldadinhoCopyTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy__root"]?.layer.add(soldadinhoCopyTranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopyTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopyTranslationYAnimation.duration = 15.000
		soldadinhoCopyTranslationYAnimation.values = [0.000, 0.000, -129.372, -129.372] as [Float]
		soldadinhoCopyTranslationYAnimation.keyTimes = [0.000, 0.475, 0.525, 1.000] as [NSNumber]
		soldadinhoCopyTranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopyTranslationYAnimation.beginTime = beginTime
		soldadinhoCopyTranslationYAnimation.fillMode = fillMode
		soldadinhoCopyTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy__root"]?.layer.add(soldadinhoCopyTranslationYAnimation, forKey:"story2_TranslationY")

		let sangueCopyOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		sangueCopyOpacityAnimation.duration = 15.000
		sangueCopyOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		sangueCopyOpacityAnimation.keyTimes = [0.000, 0.507, 0.542, 1.000] as [NSNumber]
		sangueCopyOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		sangueCopyOpacityAnimation.beginTime = beginTime
		sangueCopyOpacityAnimation.fillMode = fillMode
		sangueCopyOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Sangue Copy__root"]?.layer.add(sangueCopyOpacityAnimation, forKey:"story2_Opacity")

		let sangueCopyScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		sangueCopyScaleXAnimation.duration = 15.000
		sangueCopyScaleXAnimation.values = [0.000, 0.000, 1.050, 1.000, 1.000] as [Float]
		sangueCopyScaleXAnimation.keyTimes = [0.000, 0.150, 0.192, 0.225, 1.000] as [NSNumber]
		sangueCopyScaleXAnimation.timingFunctions = [linearTiming, anticOverTiming, easeInOutTiming, linearTiming]
		sangueCopyScaleXAnimation.beginTime = beginTime
		sangueCopyScaleXAnimation.fillMode = fillMode
		sangueCopyScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Sangue Copy__xScale"]?.layer.add(sangueCopyScaleXAnimation, forKey:"story2_ScaleX")

		let sangueCopyScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		sangueCopyScaleYAnimation.duration = 15.000
		sangueCopyScaleYAnimation.values = [0.000, 0.000, 1.050, 1.000, 1.000] as [Float]
		sangueCopyScaleYAnimation.keyTimes = [0.000, 0.150, 0.192, 0.225, 1.000] as [NSNumber]
		sangueCopyScaleYAnimation.timingFunctions = [linearTiming, anticOverTiming, easeInOutTiming, linearTiming]
		sangueCopyScaleYAnimation.beginTime = beginTime
		sangueCopyScaleYAnimation.fillMode = fillMode
		sangueCopyScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Sangue Copy__yScale"]?.layer.add(sangueCopyScaleYAnimation, forKey:"story2_ScaleY")

		let movementMaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		movementMaskTranslationXAnimation.duration = 15.000
		movementMaskTranslationXAnimation.values = [0.000, 0.000, -65.000] as [Float]
		movementMaskTranslationXAnimation.keyTimes = [0.000, 0.967, 1.000] as [NSNumber]
		movementMaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		movementMaskTranslationXAnimation.beginTime = beginTime
		movementMaskTranslationXAnimation.fillMode = fillMode
		movementMaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Movement_mask__root"]?.layer.add(movementMaskTranslationXAnimation, forKey:"story2_TranslationX")

		let movementMaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		movementMaskTranslationYAnimation.duration = 15.000
		movementMaskTranslationYAnimation.values = [0.000, 0.000, 0.000] as [Float]
		movementMaskTranslationYAnimation.keyTimes = [0.000, 0.967, 1.000] as [NSNumber]
		movementMaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		movementMaskTranslationYAnimation.beginTime = beginTime
		movementMaskTranslationYAnimation.fillMode = fillMode
		movementMaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Movement_mask__root"]?.layer.add(movementMaskTranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy10OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy10OpacityAnimation.duration = 15.000
		soldadinhoCopy10OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy10OpacityAnimation.keyTimes = [0.000, 0.285, 0.297, 1.000] as [NSNumber]
		soldadinhoCopy10OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy10OpacityAnimation.beginTime = beginTime
		soldadinhoCopy10OpacityAnimation.fillMode = fillMode
		soldadinhoCopy10OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.add(soldadinhoCopy10OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy10TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy10TranslationXAnimation.duration = 15.000
		soldadinhoCopy10TranslationXAnimation.values = [0.000, 0.000, 170.422, 172.853, 172.853] as [Float]
		soldadinhoCopy10TranslationXAnimation.keyTimes = [0.000, 0.455, 0.500, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy10TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming, linearTiming]
		soldadinhoCopy10TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy10TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy10TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.add(soldadinhoCopy10TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy10TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy10TranslationYAnimation.duration = 15.000
		soldadinhoCopy10TranslationYAnimation.values = [0.000, 0.000, -70.916, -72.397, -72.397] as [Float]
		soldadinhoCopy10TranslationYAnimation.keyTimes = [0.000, 0.455, 0.500, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy10TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming, linearTiming]
		soldadinhoCopy10TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy10TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy10TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.add(soldadinhoCopy10TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy2OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy2OpacityAnimation.duration = 15.000
		soldadinhoCopy2OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy2OpacityAnimation.keyTimes = [0.000, 0.273, 0.297, 1.000] as [NSNumber]
		soldadinhoCopy2OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy2OpacityAnimation.beginTime = beginTime
		soldadinhoCopy2OpacityAnimation.fillMode = fillMode
		soldadinhoCopy2OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.add(soldadinhoCopy2OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy2TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy2TranslationXAnimation.duration = 15.000
		soldadinhoCopy2TranslationXAnimation.values = [0.000, 0.000, 63.944, 63.944] as [Float]
		soldadinhoCopy2TranslationXAnimation.keyTimes = [0.000, 0.455, 0.542, 1.000] as [NSNumber]
		soldadinhoCopy2TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy2TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy2TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy2TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.add(soldadinhoCopy2TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy2TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy2TranslationYAnimation.duration = 15.000
		soldadinhoCopy2TranslationYAnimation.values = [0.000, 0.000, -40.091, -40.091] as [Float]
		soldadinhoCopy2TranslationYAnimation.keyTimes = [0.000, 0.455, 0.542, 1.000] as [NSNumber]
		soldadinhoCopy2TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy2TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy2TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy2TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.add(soldadinhoCopy2TranslationYAnimation, forKey:"story2_TranslationY")

		let tela1OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		tela1OpacityAnimation.duration = 15.000
		tela1OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		tela1OpacityAnimation.keyTimes = [0.000, 0.033, 0.107, 1.000] as [NSNumber]
		tela1OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		tela1OpacityAnimation.beginTime = beginTime
		tela1OpacityAnimation.fillMode = fillMode
		tela1OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Tela1__root"]?.layer.add(tela1OpacityAnimation, forKey:"story2_Opacity")

		let leoMachucadoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		leoMachucadoOpacityAnimation.duration = 15.000
		leoMachucadoOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		leoMachucadoOpacityAnimation.keyTimes = [0.000, 0.717, 0.833, 1.000] as [NSNumber]
		leoMachucadoOpacityAnimation.timingFunctions = [anticOverTiming, anticOverTiming, linearTiming]
		leoMachucadoOpacityAnimation.beginTime = beginTime
		leoMachucadoOpacityAnimation.fillMode = fillMode
		leoMachucadoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Leo machucado__root"]?.layer.add(leoMachucadoOpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy7OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy7OpacityAnimation.duration = 15.000
		soldadinhoCopy7OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy7OpacityAnimation.keyTimes = [0.000, 0.283, 0.302, 1.000] as [NSNumber]
		soldadinhoCopy7OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy7OpacityAnimation.beginTime = beginTime
		soldadinhoCopy7OpacityAnimation.fillMode = fillMode
		soldadinhoCopy7OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.add(soldadinhoCopy7OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy7TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy7TranslationXAnimation.duration = 15.000
		soldadinhoCopy7TranslationXAnimation.values = [0.000, 0.000, 130.138, 130.138] as [Float]
		soldadinhoCopy7TranslationXAnimation.keyTimes = [0.000, 0.455, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy7TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy7TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy7TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy7TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.add(soldadinhoCopy7TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy7TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy7TranslationYAnimation.duration = 15.000
		soldadinhoCopy7TranslationYAnimation.values = [0.000, 0.000, -104.481, -104.481] as [Float]
		soldadinhoCopy7TranslationYAnimation.keyTimes = [0.000, 0.455, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy7TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy7TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy7TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy7TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.add(soldadinhoCopy7TranslationYAnimation, forKey:"story2_TranslationY")

		let fala3MaskScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		fala3MaskScaleXAnimation.duration = 15.000
		fala3MaskScaleXAnimation.values = [1.712, 1.712, 1.712, 1.712] as [Float]
		fala3MaskScaleXAnimation.keyTimes = [0.000, 0.057, 0.353, 1.000] as [NSNumber]
		fala3MaskScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fala3MaskScaleXAnimation.beginTime = beginTime
		fala3MaskScaleXAnimation.fillMode = fillMode
		fala3MaskScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask__xScale"]?.layer.add(fala3MaskScaleXAnimation, forKey:"story2_ScaleX")

		let fala3MaskScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		fala3MaskScaleYAnimation.duration = 15.000
		fala3MaskScaleYAnimation.values = [16.765, 16.765, 16.765, 28.454, 28.454, 16.760, 16.760] as [Float]
		fala3MaskScaleYAnimation.keyTimes = [0.000, 0.057, 0.057, 0.067, 0.353, 0.362, 1.000] as [NSNumber]
		fala3MaskScaleYAnimation.timingFunctions = [instantTiming, instantTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		fala3MaskScaleYAnimation.beginTime = beginTime
		fala3MaskScaleYAnimation.fillMode = fillMode
		fala3MaskScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask__yScale"]?.layer.add(fala3MaskScaleYAnimation, forKey:"story2_ScaleY")

		let fala3MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		fala3MaskTranslationXAnimation.duration = 15.000
		fala3MaskTranslationXAnimation.values = [0.000, 0.000, 1405.000, 1405.000, 0.000, 0.000, 1405.000, 1405.000] as [Float]
		fala3MaskTranslationXAnimation.keyTimes = [0.000, 0.027, 0.067, 0.327, 0.367, 0.377, 0.417, 1.000] as [NSNumber]
		fala3MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		fala3MaskTranslationXAnimation.beginTime = beginTime
		fala3MaskTranslationXAnimation.fillMode = fillMode
		fala3MaskTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask__root"]?.layer.add(fala3MaskTranslationXAnimation, forKey:"story2_TranslationX")

		let fala3MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		fala3MaskTranslationYAnimation.duration = 15.000
		fala3MaskTranslationYAnimation.values = [0.000, 0.000, 0.000, 0.000] as [Float]
		fala3MaskTranslationYAnimation.keyTimes = [0.000, 0.027, 0.327, 1.000] as [NSNumber]
		fala3MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fala3MaskTranslationYAnimation.beginTime = beginTime
		fala3MaskTranslationYAnimation.fillMode = fillMode
		fala3MaskTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask__root"]?.layer.add(fala3MaskTranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy5OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy5OpacityAnimation.duration = 15.000
		soldadinhoCopy5OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy5OpacityAnimation.keyTimes = [0.000, 0.298, 0.312, 1.000] as [NSNumber]
		soldadinhoCopy5OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy5OpacityAnimation.beginTime = beginTime
		soldadinhoCopy5OpacityAnimation.fillMode = fillMode
		soldadinhoCopy5OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.add(soldadinhoCopy5OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy5TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy5TranslationXAnimation.duration = 15.000
		soldadinhoCopy5TranslationXAnimation.values = [0.000, 0.000, -92.100, -92.100] as [Float]
		soldadinhoCopy5TranslationXAnimation.keyTimes = [0.000, 0.465, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy5TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy5TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy5TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy5TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.add(soldadinhoCopy5TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy5TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy5TranslationYAnimation.duration = 15.000
		soldadinhoCopy5TranslationYAnimation.values = [0.000, 0.000, 2.078, 2.078] as [Float]
		soldadinhoCopy5TranslationYAnimation.keyTimes = [0.000, 0.465, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy5TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy5TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy5TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy5TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.add(soldadinhoCopy5TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy4OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy4OpacityAnimation.duration = 15.000
		soldadinhoCopy4OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy4OpacityAnimation.keyTimes = [0.000, 0.287, 0.305, 1.000] as [NSNumber]
		soldadinhoCopy4OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy4OpacityAnimation.beginTime = beginTime
		soldadinhoCopy4OpacityAnimation.fillMode = fillMode
		soldadinhoCopy4OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.add(soldadinhoCopy4OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy4TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy4TranslationXAnimation.duration = 15.000
		soldadinhoCopy4TranslationXAnimation.values = [0.000, 0.000, -73.666, -73.666] as [Float]
		soldadinhoCopy4TranslationXAnimation.keyTimes = [0.000, 0.472, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy4TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy4TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy4TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy4TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.add(soldadinhoCopy4TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy4TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy4TranslationYAnimation.duration = 15.000
		soldadinhoCopy4TranslationYAnimation.values = [0.000, 0.000, -46.787, -46.787] as [Float]
		soldadinhoCopy4TranslationYAnimation.keyTimes = [0.000, 0.472, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy4TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy4TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy4TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy4TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.add(soldadinhoCopy4TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy11OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy11OpacityAnimation.duration = 15.000
		soldadinhoCopy11OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy11OpacityAnimation.keyTimes = [0.000, 0.287, 0.308, 1.000] as [NSNumber]
		soldadinhoCopy11OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy11OpacityAnimation.beginTime = beginTime
		soldadinhoCopy11OpacityAnimation.fillMode = fillMode
		soldadinhoCopy11OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.add(soldadinhoCopy11OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy11TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy11TranslationXAnimation.duration = 15.000
		soldadinhoCopy11TranslationXAnimation.values = [0.000, 0.000, -46.894, -46.894] as [Float]
		soldadinhoCopy11TranslationXAnimation.keyTimes = [0.000, 0.472, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy11TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy11TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy11TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy11TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.add(soldadinhoCopy11TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy11TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy11TranslationYAnimation.duration = 15.000
		soldadinhoCopy11TranslationYAnimation.values = [0.000, 0.000, -154.647, -154.647] as [Float]
		soldadinhoCopy11TranslationYAnimation.keyTimes = [0.000, 0.472, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy11TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy11TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy11TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy11TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.add(soldadinhoCopy11TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy13OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy13OpacityAnimation.duration = 15.000
		soldadinhoCopy13OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy13OpacityAnimation.keyTimes = [0.000, 0.273, 0.310, 1.000] as [NSNumber]
		soldadinhoCopy13OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy13OpacityAnimation.beginTime = beginTime
		soldadinhoCopy13OpacityAnimation.fillMode = fillMode
		soldadinhoCopy13OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.add(soldadinhoCopy13OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy13TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy13TranslationXAnimation.duration = 15.000
		soldadinhoCopy13TranslationXAnimation.values = [0.000, 0.000, -164.166, -164.166] as [Float]
		soldadinhoCopy13TranslationXAnimation.keyTimes = [0.000, 0.462, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy13TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy13TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy13TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy13TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.add(soldadinhoCopy13TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy13TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy13TranslationYAnimation.duration = 15.000
		soldadinhoCopy13TranslationYAnimation.values = [0.000, 0.000, -126.038, -126.038] as [Float]
		soldadinhoCopy13TranslationYAnimation.keyTimes = [0.000, 0.462, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy13TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy13TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy13TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy13TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.add(soldadinhoCopy13TranslationYAnimation, forKey:"story2_TranslationY")

		let machucadoCabeçaScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		machucadoCabeçaScaleXAnimation.duration = 15.000
		machucadoCabeçaScaleXAnimation.values = [0.000, 0.000, 1.100, 0.900, 1.100, 0.900, 1.100, 1.000, 1.000, 0.000, 0.000] as [Float]
		machucadoCabeçaScaleXAnimation.keyTimes = [0.000, 0.107, 0.127, 0.152, 0.175, 0.202, 0.228, 0.260, 0.717, 0.833, 1.000] as [NSNumber]
		machucadoCabeçaScaleXAnimation.timingFunctions = [anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, linearTiming]
		machucadoCabeçaScaleXAnimation.beginTime = beginTime
		machucadoCabeçaScaleXAnimation.fillMode = fillMode
		machucadoCabeçaScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Machucado cabeça__xScale"]?.layer.add(machucadoCabeçaScaleXAnimation, forKey:"story2_ScaleX")

		let machucadoCabeçaScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		machucadoCabeçaScaleYAnimation.duration = 15.000
		machucadoCabeçaScaleYAnimation.values = [0.000, 0.000, 1.100, 0.900, 1.100, 0.900, 1.100, 1.000, 1.000, 0.000, 0.000] as [Float]
		machucadoCabeçaScaleYAnimation.keyTimes = [0.000, 0.107, 0.127, 0.152, 0.175, 0.202, 0.228, 0.260, 0.717, 0.833, 1.000] as [NSNumber]
		machucadoCabeçaScaleYAnimation.timingFunctions = [anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, anticOverTiming, linearTiming]
		machucadoCabeçaScaleYAnimation.beginTime = beginTime
		machucadoCabeçaScaleYAnimation.fillMode = fillMode
		machucadoCabeçaScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Machucado cabeça__yScale"]?.layer.add(machucadoCabeçaScaleYAnimation, forKey:"story2_ScaleY")

		let machucado2OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		machucado2OpacityAnimation.duration = 15.000
		machucado2OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		machucado2OpacityAnimation.keyTimes = [0.000, 0.107, 0.127, 1.000] as [NSNumber]
		machucado2OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		machucado2OpacityAnimation.beginTime = beginTime
		machucado2OpacityAnimation.fillMode = fillMode
		machucado2OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Machucado 2__root"]?.layer.add(machucado2OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy3OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy3OpacityAnimation.duration = 15.000
		soldadinhoCopy3OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy3OpacityAnimation.keyTimes = [0.000, 0.282, 0.292, 1.000] as [NSNumber]
		soldadinhoCopy3OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy3OpacityAnimation.beginTime = beginTime
		soldadinhoCopy3OpacityAnimation.fillMode = fillMode
		soldadinhoCopy3OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.add(soldadinhoCopy3OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy3TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy3TranslationXAnimation.duration = 15.000
		soldadinhoCopy3TranslationXAnimation.values = [0.000, 0.000, -13.616, -13.616] as [Float]
		soldadinhoCopy3TranslationXAnimation.keyTimes = [0.000, 0.455, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy3TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy3TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy3TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy3TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.add(soldadinhoCopy3TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy3TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy3TranslationYAnimation.duration = 15.000
		soldadinhoCopy3TranslationYAnimation.values = [0.000, 0.000, -97.731, -97.731] as [Float]
		soldadinhoCopy3TranslationYAnimation.keyTimes = [0.000, 0.455, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy3TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy3TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy3TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy3TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.add(soldadinhoCopy3TranslationYAnimation, forKey:"story2_TranslationY")

		let handScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		handScaleXAnimation.duration = 15.000
		handScaleXAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		handScaleXAnimation.keyTimes = [0.000, 0.933, 0.967, 1.000] as [NSNumber]
		handScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		handScaleXAnimation.beginTime = beginTime
		handScaleXAnimation.fillMode = fillMode
		handScaleXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["hand__xScale"]?.layer.add(handScaleXAnimation, forKey:"story2_ScaleX")

		let handScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		handScaleYAnimation.duration = 15.000
		handScaleYAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		handScaleYAnimation.keyTimes = [0.000, 0.933, 0.967, 1.000] as [NSNumber]
		handScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		handScaleYAnimation.beginTime = beginTime
		handScaleYAnimation.fillMode = fillMode
		handScaleYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["hand__yScale"]?.layer.add(handScaleYAnimation, forKey:"story2_ScaleY")

		let handTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		handTranslationXAnimation.duration = 15.000
		handTranslationXAnimation.values = [0.000, 0.000, -70.000] as [Float]
		handTranslationXAnimation.keyTimes = [0.000, 0.967, 1.000] as [NSNumber]
		handTranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		handTranslationXAnimation.beginTime = beginTime
		handTranslationXAnimation.fillMode = fillMode
		handTranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["hand__root"]?.layer.add(handTranslationXAnimation, forKey:"story2_TranslationX")

		let handTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		handTranslationYAnimation.duration = 15.000
		handTranslationYAnimation.values = [0.000, 0.000, 0.000] as [Float]
		handTranslationYAnimation.keyTimes = [0.000, 0.967, 1.000] as [NSNumber]
		handTranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		handTranslationYAnimation.beginTime = beginTime
		handTranslationYAnimation.fillMode = fillMode
		handTranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["hand__root"]?.layer.add(handTranslationYAnimation, forKey:"story2_TranslationY")

		let leoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		leoOpacityAnimation.duration = 15.000
		leoOpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		leoOpacityAnimation.keyTimes = [0.000, 0.033, 0.107, 1.000] as [NSNumber]
		leoOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoOpacityAnimation.beginTime = beginTime
		leoOpacityAnimation.fillMode = fillMode
		leoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Leo__root"]?.layer.add(leoOpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy9OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy9OpacityAnimation.duration = 15.000
		soldadinhoCopy9OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy9OpacityAnimation.keyTimes = [0.000, 0.273, 0.282, 1.000] as [NSNumber]
		soldadinhoCopy9OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy9OpacityAnimation.beginTime = beginTime
		soldadinhoCopy9OpacityAnimation.fillMode = fillMode
		soldadinhoCopy9OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.add(soldadinhoCopy9OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy9TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy9TranslationXAnimation.duration = 15.000
		soldadinhoCopy9TranslationXAnimation.values = [0.000, 0.000, 173.045, 173.045] as [Float]
		soldadinhoCopy9TranslationXAnimation.keyTimes = [0.000, 0.467, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy9TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy9TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy9TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy9TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.add(soldadinhoCopy9TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy9TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy9TranslationYAnimation.duration = 15.000
		soldadinhoCopy9TranslationYAnimation.values = [0.000, 0.000, -203.869, -203.869] as [Float]
		soldadinhoCopy9TranslationYAnimation.keyTimes = [0.000, 0.467, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy9TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy9TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy9TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy9TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.add(soldadinhoCopy9TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy12OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy12OpacityAnimation.duration = 15.000
		soldadinhoCopy12OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy12OpacityAnimation.keyTimes = [0.000, 0.273, 0.315, 1.000] as [NSNumber]
		soldadinhoCopy12OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy12OpacityAnimation.beginTime = beginTime
		soldadinhoCopy12OpacityAnimation.fillMode = fillMode
		soldadinhoCopy12OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.add(soldadinhoCopy12OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy12TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy12TranslationXAnimation.duration = 15.000
		soldadinhoCopy12TranslationXAnimation.values = [0.000, 0.000, -80.822, -80.822] as [Float]
		soldadinhoCopy12TranslationXAnimation.keyTimes = [0.000, 0.455, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy12TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy12TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy12TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy12TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.add(soldadinhoCopy12TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy12TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy12TranslationYAnimation.duration = 15.000
		soldadinhoCopy12TranslationYAnimation.values = [0.000, 0.000, -100.166, -100.166] as [Float]
		soldadinhoCopy12TranslationYAnimation.keyTimes = [0.000, 0.455, 0.525, 1.000] as [NSNumber]
		soldadinhoCopy12TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy12TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy12TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy12TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.add(soldadinhoCopy12TranslationYAnimation, forKey:"story2_TranslationY")

		let machucadoOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		machucadoOpacityAnimation.duration = 15.000
		machucadoOpacityAnimation.values = [1.000, 1.000, 0.000, 0.000] as [Float]
		machucadoOpacityAnimation.keyTimes = [0.000, 0.507, 0.542, 1.000] as [NSNumber]
		machucadoOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		machucadoOpacityAnimation.beginTime = beginTime
		machucadoOpacityAnimation.fillMode = fillMode
		machucadoOpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Machucado__root"]?.layer.add(machucadoOpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy6OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy6OpacityAnimation.duration = 15.000
		soldadinhoCopy6OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy6OpacityAnimation.keyTimes = [0.000, 0.277, 0.288, 1.000] as [NSNumber]
		soldadinhoCopy6OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy6OpacityAnimation.beginTime = beginTime
		soldadinhoCopy6OpacityAnimation.fillMode = fillMode
		soldadinhoCopy6OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.add(soldadinhoCopy6OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy6TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy6TranslationXAnimation.duration = 15.000
		soldadinhoCopy6TranslationXAnimation.values = [0.000, 0.000, 18.103, 18.103] as [Float]
		soldadinhoCopy6TranslationXAnimation.keyTimes = [0.000, 0.455, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy6TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy6TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy6TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy6TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.add(soldadinhoCopy6TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy6TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy6TranslationYAnimation.duration = 15.000
		soldadinhoCopy6TranslationYAnimation.values = [0.000, 0.000, -174.084, -174.084] as [Float]
		soldadinhoCopy6TranslationYAnimation.keyTimes = [0.000, 0.455, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy6TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming]
		soldadinhoCopy6TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy6TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy6TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.add(soldadinhoCopy6TranslationYAnimation, forKey:"story2_TranslationY")

		let soldadinhoCopy8OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		soldadinhoCopy8OpacityAnimation.duration = 15.000
		soldadinhoCopy8OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		soldadinhoCopy8OpacityAnimation.keyTimes = [0.000, 0.290, 0.307, 1.000] as [NSNumber]
		soldadinhoCopy8OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy8OpacityAnimation.beginTime = beginTime
		soldadinhoCopy8OpacityAnimation.fillMode = fillMode
		soldadinhoCopy8OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.add(soldadinhoCopy8OpacityAnimation, forKey:"story2_Opacity")

		let soldadinhoCopy8TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy8TranslationXAnimation.duration = 15.000
		soldadinhoCopy8TranslationXAnimation.values = [0.000, 0.000, 102.850, 124.559, 124.559] as [Float]
		soldadinhoCopy8TranslationXAnimation.keyTimes = [0.000, 0.455, 0.485, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy8TranslationXAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming, linearTiming]
		soldadinhoCopy8TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy8TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy8TranslationXAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.add(soldadinhoCopy8TranslationXAnimation, forKey:"story2_TranslationX")

		let soldadinhoCopy8TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy8TranslationYAnimation.duration = 15.000
		soldadinhoCopy8TranslationYAnimation.values = [0.000, 0.000, -153.253, -150.825, -150.825] as [Float]
		soldadinhoCopy8TranslationYAnimation.keyTimes = [0.000, 0.455, 0.485, 0.533, 1.000] as [NSNumber]
		soldadinhoCopy8TranslationYAnimation.timingFunctions = [linearTiming, easeInOutTiming, linearTiming, linearTiming]
		soldadinhoCopy8TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy8TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy8TranslationYAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.add(soldadinhoCopy8TranslationYAnimation, forKey:"story2_TranslationY")

		let rectangle203OpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		rectangle203OpacityAnimation.duration = 15.000
		rectangle203OpacityAnimation.values = [0.000, 0.000, 1.000, 1.000] as [Float]
		rectangle203OpacityAnimation.keyTimes = [0.000, 0.107, 0.127, 1.000] as [NSNumber]
		rectangle203OpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		rectangle203OpacityAnimation.beginTime = beginTime
		rectangle203OpacityAnimation.fillMode = fillMode
		rectangle203OpacityAnimation.isRemovedOnCompletion = removedOnCompletion
		self.viewsByName["Rectangle 203__root"]?.layer.add(rectangle203OpacityAnimation, forKey:"story2_Opacity")
	}

	func removeStory2Animation() {
		self.layer.removeAnimation(forKey: "Story2")
		self.viewsByName["Fala3"]?.layer.removeAnimation(forKey: "story2_ImageContents")
		self.viewsByName["Leo falando__xScale"]?.layer.removeAnimation(forKey: "story2_ScaleX")
		self.viewsByName["Leo falando__yScale"]?.layer.removeAnimation(forKey: "story2_ScaleY")
		self.viewsByName["Soldadinho Copy__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Sangue Copy__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Sangue Copy__xScale"]?.layer.removeAnimation(forKey: "story2_ScaleX")
		self.viewsByName["Sangue Copy__yScale"]?.layer.removeAnimation(forKey: "story2_ScaleY")
		self.viewsByName["Movement_mask__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Movement_mask__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 10__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 2__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Tela1__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Leo machucado__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 7__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Fala3_mask__xScale"]?.layer.removeAnimation(forKey: "story2_ScaleX")
		self.viewsByName["Fala3_mask__yScale"]?.layer.removeAnimation(forKey: "story2_ScaleY")
		self.viewsByName["Fala3_mask__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Fala3_mask__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 5__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 4__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 11__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 13__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Machucado cabeça__xScale"]?.layer.removeAnimation(forKey: "story2_ScaleX")
		self.viewsByName["Machucado cabeça__yScale"]?.layer.removeAnimation(forKey: "story2_ScaleY")
		self.viewsByName["Machucado 2__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 3__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["hand__xScale"]?.layer.removeAnimation(forKey: "story2_ScaleX")
		self.viewsByName["hand__yScale"]?.layer.removeAnimation(forKey: "story2_ScaleY")
		self.viewsByName["hand__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["hand__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Leo__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 9__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 12__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Machucado__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 6__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.removeAnimation(forKey: "story2_TranslationX")
		self.viewsByName["Soldadinho Copy 8__root"]?.layer.removeAnimation(forKey: "story2_TranslationY")
		self.viewsByName["Rectangle 203__root"]?.layer.removeAnimation(forKey: "story2_Opacity")
	}

	// MARK: CAAnimationDelegate
	func animationDidStop(_ anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValue(forKey: anim)
			completion(flag)
		}
	}

	override func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimation(forKey: "Story2")
	}
}
