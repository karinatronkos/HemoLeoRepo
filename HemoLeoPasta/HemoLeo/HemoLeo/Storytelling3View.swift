//
// Storytelling3View.swift
// Generated by Core Animator version 1.3 on 7/22/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

@IBDesignable
class Storytelling3View : UIView {


	var animationCompletions = Dictionary<CAAnimation, (Bool) -> Void>()
	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 1024, height: 768))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .ScaleToFill:
				break
			case .ScaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransformMakeScale(xScale, yScale)
			scalingView.center = CGPoint(x:CGRectGetMidX(self.bounds), y:CGRectGetMidY(self.bounds))
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = NSBundle(forClass:self.dynamicType)
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:1024, height:768)
		__scaling__.center = CGPoint(x:512.0, y:384.0)
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let fala5 = UIImageView()
		fala5.bounds = CGRect(x:0, y:0, width:803.0, height:229.0)
		var imgFala5: UIImage!
		if let imagePath = bundle.pathForResource("Fala5.png", ofType:nil) {
			imgFala5 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Fala5.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		fala5.image = imgFala5
		fala5.contentMode = .Center
		fala5.layer.position = CGPoint(x:579.777, y:182.348)
		__scaling__.addSubview(fala5)
		viewsByName["Fala5"] = fala5

		let fala5Mask = UIImageView()
		fala5Mask.bounds = CGRect(x:0, y:0, width:185.0, height:118.0)
		var imgGradient2: UIImage!
		if let imagePath = bundle.pathForResource("gradient2.png", ofType:nil) {
			imgGradient2 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'gradient2.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		fala5Mask.image = imgGradient2
		fala5Mask.contentMode = .Center
		fala5Mask.layer.position = CGPoint(x:-838.000, y:106.270)
		fala5Mask.transform = CGAffineTransformScale(CGAffineTransformMakeRotation(4.71), 1.73, 14.52)
		fala5.maskView = fala5Mask
		viewsByName["Fala5_mask"] = fala5Mask

		let fala3 = UIImageView()
		fala3.bounds = CGRect(x:0, y:0, width:803.0, height:225.0)
		var imgFala3: UIImage!
		if let imagePath = bundle.pathForResource("Fala3.png", ofType:nil) {
			imgFala3 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Fala3.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		fala3.image = imgFala3
		fala3.contentMode = .Center
		fala3.layer.position = CGPoint(x:579.036, y:183.376)
		__scaling__.addSubview(fala3)
		viewsByName["Fala3"] = fala3

		let fala3Mask = UIImageView()
		fala3Mask.bounds = CGRect(x:0, y:0, width:185.0, height:118.0)
		fala3Mask.image = imgGradient2
		fala3Mask.contentMode = .Center
		fala3Mask.layer.position = CGPoint(x:-792.000, y:109.409)
		fala3Mask.transform = CGAffineTransformScale(CGAffineTransformMakeRotation(4.71), 1.35, 13.51)
		fala3.maskView = fala3Mask
		viewsByName["Fala3_mask"] = fala3Mask

		let leoFalando = UIImageView()
		leoFalando.bounds = CGRect(x:0, y:0, width:170.0, height:179.0)
		var imgLeoFalando: UIImage!
		if let imagePath = bundle.pathForResource("Leo falando.png", ofType:nil) {
			imgLeoFalando = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Leo falando.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		leoFalando.image = imgLeoFalando
		leoFalando.contentMode = .Center
		leoFalando.layer.position = CGPoint(x:110.714, y:119.535)
		leoFalando.transform = CGAffineTransformMakeScale(0.00, 0.00)
		__scaling__.addSubview(leoFalando)
		viewsByName["Leo falando"] = leoFalando

		let movement = UIImageView()
		movement.bounds = CGRect(x:0, y:0, width:56.0, height:16.0)
		var imgArrow: UIImage!
		if let imagePath = bundle.pathForResource("arrow.png", ofType:nil) {
			imgArrow = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'arrow.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		movement.image = imgArrow
		movement.contentMode = .Center
		movement.layer.position = CGPoint(x:908.000, y:708.000)
		movement.transform = CGAffineTransformMakeScale(1.40, 1.40)
		__scaling__.addSubview(movement)
		viewsByName["Movement"] = movement

		let movementMask = UIImageView()
		movementMask.bounds = CGRect(x:0, y:0, width:185.0, height:118.0)
		movementMask.image = imgGradient2
		movementMask.contentMode = .Center
		movementMask.layer.position = CGPoint(x:139.000, y:5.000)
		movementMask.transform = CGAffineTransformScale(CGAffineTransformMakeRotation(4.71), 0.17, 1.06)
		movement.maskView = movementMask
		viewsByName["Movement_mask"] = movementMask

		let hand = UIImageView()
		hand.bounds = CGRect(x:0, y:0, width:54.0, height:50.0)
		var imgHand: UIImage!
		if let imagePath = bundle.pathForResource("hand.png", ofType:nil) {
			imgHand = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'hand.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		hand.image = imgHand
		hand.contentMode = .Center
		hand.layer.position = CGPoint(x:958.925, y:728.962)
		hand.transform = CGAffineTransformMakeScale(0.00, 0.00)
		__scaling__.addSubview(hand)
		viewsByName["hand"] = hand

		let arrow = UIImageView()
		arrow.bounds = CGRect(x:0, y:0, width:56.0, height:16.0)
		arrow.image = imgArrow
		arrow.contentMode = .Center
		arrow.layer.position = CGPoint(x:1257.004, y:737.371)
		__scaling__.addSubview(arrow)
		viewsByName["arrow"] = arrow

		let leoMelhor = UIImageView()
		leoMelhor.bounds = CGRect(x:0, y:0, width:353.0, height:328.0)
		var imgLeoMelhor: UIImage!
		if let imagePath = bundle.pathForResource("Leo melhor.png", ofType:nil) {
			imgLeoMelhor = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Leo melhor.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		leoMelhor.image = imgLeoMelhor
		leoMelhor.contentMode = .Center
		leoMelhor.layer.position = CGPoint(x:335.500, y:530.381)
		leoMelhor.alpha = 0.00
		__scaling__.addSubview(leoMelhor)
		viewsByName["Leo melhor"] = leoMelhor

		let leoMachucado = UIImageView()
		leoMachucado.bounds = CGRect(x:0, y:0, width:353.0, height:327.0)
		var imgLeoMachucado: UIImage!
		if let imagePath = bundle.pathForResource("Leo Machucado.png", ofType:nil) {
			imgLeoMachucado = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Leo Machucado.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		leoMachucado.image = imgLeoMachucado
		leoMachucado.contentMode = .Center
		leoMachucado.layer.position = CGPoint(x:335.500, y:529.501)
		leoMachucado.transform = CGAffineTransformMakeScale(0.00, 0.00)
		__scaling__.addSubview(leoMachucado)
		viewsByName["Leo Machucado"] = leoMachucado

		let telaToda = UIView()
		telaToda.bounds = CGRect(x:0, y:0, width:364.0, height:328.0)
		telaToda.layer.position = CGPoint(x:765.842, y:526.417)
		telaToda.alpha = 0.00
		__scaling__.addSubview(telaToda)
		viewsByName["Tela Toda"] = telaToda

		let tela = UIView()
		tela.bounds = CGRect(x:0, y:0, width:364.0, height:328.0)
		tela.layer.position = CGPoint(x:182.000, y:164.000)
		telaToda.addSubview(tela)
		viewsByName["Tela"] = tela

		let tela1 = UIImageView()
		tela1.bounds = CGRect(x:0, y:0, width:364.0, height:328.0)
		var imgTela1: UIImage!
		if let imagePath = bundle.pathForResource("Tela1.png", ofType:nil) {
			imgTela1 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Tela1.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		tela1.image = imgTela1
		tela1.contentMode = .Center
		tela1.layer.position = CGPoint(x:182.000, y:164.000)
		tela.addSubview(tela1)
		viewsByName["Tela1"] = tela1

		let rectangle203 = UIImageView()
		rectangle203.bounds = CGRect(x:0, y:0, width:67.0, height:48.0)
		var imgRectangle203: UIImage!
		if let imagePath = bundle.pathForResource("Rectangle 203.png", ofType:nil) {
			imgRectangle203 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Rectangle 203.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		rectangle203.image = imgRectangle203
		rectangle203.contentMode = .Center
		rectangle203.layer.position = CGPoint(x:194.282, y:106.553)
		tela.addSubview(rectangle203)
		viewsByName["Rectangle 203"] = rectangle203

		let sangueCopy = UIImageView()
		sangueCopy.bounds = CGRect(x:0, y:0, width:106.0, height:96.0)
		var imgSangueCopy: UIImage!
		if let imagePath = bundle.pathForResource("Sangue Copy.png", ofType:nil) {
			imgSangueCopy = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Sangue Copy.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		sangueCopy.image = imgSangueCopy
		sangueCopy.contentMode = .Center
		sangueCopy.layer.position = CGPoint(x:193.133, y:74.631)
		telaToda.addSubview(sangueCopy)
		viewsByName["Sangue Copy"] = sangueCopy

		let soldadinhoCopy7 = UIImageView()
		soldadinhoCopy7.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		var imgSoldadinhoCopy7: UIImage!
		if let imagePath = bundle.pathForResource("Soldadinho Copy 7.png", ofType:nil) {
			imgSoldadinhoCopy7 = UIImage(contentsOfFile:imagePath)
		}else {
			print("** Warning: Could not create image from 'Soldadinho Copy 7.png'. Please make sure that it is added to the project directly (not in a folder reference).")
		}
		soldadinhoCopy7.image = imgSoldadinhoCopy7
		soldadinhoCopy7.contentMode = .Center
		soldadinhoCopy7.layer.position = CGPoint(x:272.572, y:138.331)
		telaToda.addSubview(soldadinhoCopy7)
		viewsByName["Soldadinho Copy 7"] = soldadinhoCopy7

		let soldadinhoCopy = UIImageView()
		soldadinhoCopy.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy.image = imgSoldadinhoCopy7
		soldadinhoCopy.contentMode = .Center
		soldadinhoCopy.layer.position = CGPoint(x:284.572, y:187.331)
		telaToda.addSubview(soldadinhoCopy)
		viewsByName["Soldadinho Copy"] = soldadinhoCopy

		let soldadinhoCopy2 = UIImageView()
		soldadinhoCopy2.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy2.image = imgSoldadinhoCopy7
		soldadinhoCopy2.contentMode = .Center
		soldadinhoCopy2.layer.position = CGPoint(x:244.572, y:230.331)
		telaToda.addSubview(soldadinhoCopy2)
		viewsByName["Soldadinho Copy 2"] = soldadinhoCopy2

		let soldadinhoCopy3 = UIImageView()
		soldadinhoCopy3.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy3.image = imgSoldadinhoCopy7
		soldadinhoCopy3.contentMode = .Center
		soldadinhoCopy3.layer.position = CGPoint(x:175.572, y:256.331)
		telaToda.addSubview(soldadinhoCopy3)
		viewsByName["Soldadinho Copy 3"] = soldadinhoCopy3

		let soldadinhoCopy4 = UIImageView()
		soldadinhoCopy4.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy4.image = imgSoldadinhoCopy7
		soldadinhoCopy4.contentMode = .Center
		soldadinhoCopy4.layer.position = CGPoint(x:205.572, y:186.331)
		telaToda.addSubview(soldadinhoCopy4)
		viewsByName["Soldadinho Copy 4"] = soldadinhoCopy4

		let soldadinhoCopy5 = UIImageView()
		soldadinhoCopy5.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy5.image = imgSoldadinhoCopy7
		soldadinhoCopy5.contentMode = .Center
		soldadinhoCopy5.layer.position = CGPoint(x:115.572, y:142.331)
		telaToda.addSubview(soldadinhoCopy5)
		viewsByName["Soldadinho Copy 5"] = soldadinhoCopy5

		let soldadinhoCopy11 = UIImageView()
		soldadinhoCopy11.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy11.image = imgSoldadinhoCopy7
		soldadinhoCopy11.contentMode = .Center
		soldadinhoCopy11.layer.position = CGPoint(x:295.572, y:92.331)
		telaToda.addSubview(soldadinhoCopy11)
		viewsByName["Soldadinho Copy 11"] = soldadinhoCopy11

		let soldadinhoCopy6 = UIImageView()
		soldadinhoCopy6.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy6.image = imgSoldadinhoCopy7
		soldadinhoCopy6.contentMode = .Center
		soldadinhoCopy6.layer.position = CGPoint(x:85.572, y:192.331)
		telaToda.addSubview(soldadinhoCopy6)
		viewsByName["Soldadinho Copy 6"] = soldadinhoCopy6

		let soldadinhoCopy8 = UIImageView()
		soldadinhoCopy8.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy8.image = imgSoldadinhoCopy7
		soldadinhoCopy8.contentMode = .Center
		soldadinhoCopy8.layer.position = CGPoint(x:35.572, y:222.331)
		telaToda.addSubview(soldadinhoCopy8)
		viewsByName["Soldadinho Copy 8"] = soldadinhoCopy8

		let soldadinhoCopy9 = UIImageView()
		soldadinhoCopy9.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy9.image = imgSoldadinhoCopy7
		soldadinhoCopy9.contentMode = .Center
		soldadinhoCopy9.layer.position = CGPoint(x:98.572, y:242.331)
		telaToda.addSubview(soldadinhoCopy9)
		viewsByName["Soldadinho Copy 9"] = soldadinhoCopy9

		let soldadinhoCopy10 = UIImageView()
		soldadinhoCopy10.bounds = CGRect(x:0, y:0, width:19.0, height:19.0)
		soldadinhoCopy10.image = imgSoldadinhoCopy7
		soldadinhoCopy10.contentMode = .Center
		soldadinhoCopy10.layer.position = CGPoint(x:49.572, y:284.331)
		telaToda.addSubview(soldadinhoCopy10)
		viewsByName["Soldadinho Copy 10"] = soldadinhoCopy10

		self.viewsByName = viewsByName
	}

	// - MARK: story3

	func addStory3Animation() {
		addStory3AnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: nil)
	}

	func addStory3Animation(completion: ((Bool) -> Void)?) {
		addStory3AnimationWithBeginTime(0, fillMode: kCAFillModeBoth, removedOnCompletion: false, completion: completion)
	}

	func addStory3Animation(removedOnCompletion removedOnCompletion: Bool) {
		addStory3AnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: nil)
	}

	func addStory3Animation(removedOnCompletion removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		addStory3AnimationWithBeginTime(0, fillMode: removedOnCompletion ? kCAFillModeRemoved : kCAFillModeBoth, removedOnCompletion: removedOnCompletion, completion: completion)
	}

	func addStory3AnimationWithBeginTime(beginTime: CFTimeInterval, fillMode: String, removedOnCompletion: Bool, completion: ((Bool) -> Void)?) {
		let linearTiming = CAMediaTimingFunction(name: kCAMediaTimingFunctionLinear)
		if let complete = completion {
			let representativeAnimation = CABasicAnimation(keyPath: "not.a.real.key")
			representativeAnimation.duration = 15.900
			representativeAnimation.delegate = self
			self.layer.addAnimation(representativeAnimation, forKey: "Story3")
			self.animationCompletions[layer.animationForKey("Story3")!] = complete
		}

		let soldadinhoCopy3TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy3TranslationXAnimation.duration = 15.900
		soldadinhoCopy3TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 9.134 as Float, 9.134 as Float]
		soldadinhoCopy3TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy3TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy3TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy3TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy3TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 3"]?.layer.addAnimation(soldadinhoCopy3TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy3TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy3TranslationYAnimation.duration = 15.900
		soldadinhoCopy3TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -159.908 as Float, -159.908 as Float]
		soldadinhoCopy3TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy3TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy3TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy3TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy3TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 3"]?.layer.addAnimation(soldadinhoCopy3TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy4TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy4TranslationXAnimation.duration = 15.900
		soldadinhoCopy4TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -29.045 as Float, -29.045 as Float]
		soldadinhoCopy4TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy4TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy4TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy4TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy4TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 4"]?.layer.addAnimation(soldadinhoCopy4TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy4TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy4TranslationYAnimation.duration = 15.900
		soldadinhoCopy4TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -84.768 as Float, -84.768 as Float]
		soldadinhoCopy4TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy4TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy4TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy4TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy4TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 4"]?.layer.addAnimation(soldadinhoCopy4TranslationYAnimation, forKey:"story3_TranslationY")

		let leoFalandoScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		leoFalandoScaleXAnimation.duration = 15.900
		leoFalandoScaleXAnimation.values = [0.000 as Float, 1.100 as Float, 1.000 as Float, 1.000 as Float]
		leoFalandoScaleXAnimation.keyTimes = [0.000 as Float, 0.019 as Float, 0.025 as Float, 1.000 as Float]
		leoFalandoScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoFalandoScaleXAnimation.beginTime = beginTime
		leoFalandoScaleXAnimation.fillMode = fillMode
		leoFalandoScaleXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Leo falando"]?.layer.addAnimation(leoFalandoScaleXAnimation, forKey:"story3_ScaleX")

		let leoFalandoScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		leoFalandoScaleYAnimation.duration = 15.900
		leoFalandoScaleYAnimation.values = [0.000 as Float, 1.100 as Float, 1.000 as Float, 1.000 as Float]
		leoFalandoScaleYAnimation.keyTimes = [0.000 as Float, 0.019 as Float, 0.025 as Float, 1.000 as Float]
		leoFalandoScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoFalandoScaleYAnimation.beginTime = beginTime
		leoFalandoScaleYAnimation.fillMode = fillMode
		leoFalandoScaleYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Leo falando"]?.layer.addAnimation(leoFalandoScaleYAnimation, forKey:"story3_ScaleY")

		let leoMachucadoScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		leoMachucadoScaleXAnimation.duration = 15.900
		leoMachucadoScaleXAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		leoMachucadoScaleXAnimation.keyTimes = [0.000 as Float, 0.063 as Float, 0.085 as Float, 1.000 as Float]
		leoMachucadoScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoMachucadoScaleXAnimation.beginTime = beginTime
		leoMachucadoScaleXAnimation.fillMode = fillMode
		leoMachucadoScaleXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Leo Machucado"]?.layer.addAnimation(leoMachucadoScaleXAnimation, forKey:"story3_ScaleX")

		let leoMachucadoScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		leoMachucadoScaleYAnimation.duration = 15.900
		leoMachucadoScaleYAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		leoMachucadoScaleYAnimation.keyTimes = [0.000 as Float, 0.063 as Float, 0.085 as Float, 1.000 as Float]
		leoMachucadoScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoMachucadoScaleYAnimation.beginTime = beginTime
		leoMachucadoScaleYAnimation.fillMode = fillMode
		leoMachucadoScaleYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Leo Machucado"]?.layer.addAnimation(leoMachucadoScaleYAnimation, forKey:"story3_ScaleY")

		let telaTodaOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		telaTodaOpacityAnimation.duration = 15.900
		telaTodaOpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		telaTodaOpacityAnimation.keyTimes = [0.000 as Float, 0.119 as Float, 0.154 as Float, 1.000 as Float]
		telaTodaOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		telaTodaOpacityAnimation.beginTime = beginTime
		telaTodaOpacityAnimation.fillMode = fillMode
		telaTodaOpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Tela Toda"]?.layer.addAnimation(telaTodaOpacityAnimation, forKey:"story3_Opacity")

		let sangueCopyOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		sangueCopyOpacityAnimation.duration = 15.900
		sangueCopyOpacityAnimation.values = [1.000 as Float, 1.000 as Float, 0.000 as Float, 0.000 as Float]
		sangueCopyOpacityAnimation.keyTimes = [0.000 as Float, 0.849 as Float, 0.874 as Float, 1.000 as Float]
		sangueCopyOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		sangueCopyOpacityAnimation.beginTime = beginTime
		sangueCopyOpacityAnimation.fillMode = fillMode
		sangueCopyOpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Sangue Copy"]?.layer.addAnimation(sangueCopyOpacityAnimation, forKey:"story3_Opacity")

		let soldadinhoCopy2TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy2TranslationXAnimation.duration = 15.900
		soldadinhoCopy2TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -30.482 as Float, -30.482 as Float]
		soldadinhoCopy2TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy2TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy2TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy2TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy2TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 2"]?.layer.addAnimation(soldadinhoCopy2TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy2TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy2TranslationYAnimation.duration = 15.900
		soldadinhoCopy2TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -129.596 as Float, -129.596 as Float]
		soldadinhoCopy2TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy2TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy2TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy2TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy2TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 2"]?.layer.addAnimation(soldadinhoCopy2TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy10TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy10TranslationXAnimation.duration = 15.900
		soldadinhoCopy10TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 146.625 as Float, 146.625 as Float]
		soldadinhoCopy10TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy10TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy10TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy10TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy10TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 10"]?.layer.addAnimation(soldadinhoCopy10TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy10TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy10TranslationYAnimation.duration = 15.900
		soldadinhoCopy10TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -168.170 as Float, -168.170 as Float]
		soldadinhoCopy10TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy10TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy10TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy10TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy10TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 10"]?.layer.addAnimation(soldadinhoCopy10TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy8TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy8TranslationXAnimation.duration = 15.900
		soldadinhoCopy8TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 151.042 as Float, 151.042 as Float]
		soldadinhoCopy8TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy8TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy8TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy8TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy8TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 8"]?.layer.addAnimation(soldadinhoCopy8TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy8TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy8TranslationYAnimation.duration = 15.900
		soldadinhoCopy8TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -114.083 as Float, -114.083 as Float]
		soldadinhoCopy8TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy8TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy8TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy8TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy8TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 8"]?.layer.addAnimation(soldadinhoCopy8TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy7TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy7TranslationXAnimation.duration = 15.900
		soldadinhoCopy7TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -66.424 as Float, -66.424 as Float]
		soldadinhoCopy7TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy7TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy7TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy7TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy7TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 7"]?.layer.addAnimation(soldadinhoCopy7TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy7TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy7TranslationYAnimation.duration = 15.900
		soldadinhoCopy7TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -47.636 as Float, -47.636 as Float]
		soldadinhoCopy7TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy7TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy7TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy7TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy7TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 7"]?.layer.addAnimation(soldadinhoCopy7TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy9TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy9TranslationXAnimation.duration = 15.900
		soldadinhoCopy9TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 102.042 as Float, 102.042 as Float]
		soldadinhoCopy9TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy9TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy9TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy9TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy9TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 9"]?.layer.addAnimation(soldadinhoCopy9TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy9TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy9TranslationYAnimation.duration = 15.900
		soldadinhoCopy9TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -138.261 as Float, -138.261 as Float]
		soldadinhoCopy9TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy9TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy9TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy9TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy9TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 9"]?.layer.addAnimation(soldadinhoCopy9TranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy5TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy5TranslationXAnimation.duration = 15.900
		soldadinhoCopy5TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 50.190 as Float, 50.190 as Float]
		soldadinhoCopy5TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy5TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy5TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy5TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy5TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 5"]?.layer.addAnimation(soldadinhoCopy5TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy5TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy5TranslationYAnimation.duration = 15.900
		soldadinhoCopy5TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -37.185 as Float, -37.185 as Float]
		soldadinhoCopy5TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy5TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy5TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy5TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy5TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 5"]?.layer.addAnimation(soldadinhoCopy5TranslationYAnimation, forKey:"story3_TranslationY")

		let handScaleXAnimation = CAKeyframeAnimation(keyPath: "transform.scale.x")
		handScaleXAnimation.duration = 15.900
		handScaleXAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		handScaleXAnimation.keyTimes = [0.000 as Float, 0.950 as Float, 0.965 as Float, 1.000 as Float]
		handScaleXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		handScaleXAnimation.beginTime = beginTime
		handScaleXAnimation.fillMode = fillMode
		handScaleXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["hand"]?.layer.addAnimation(handScaleXAnimation, forKey:"story3_ScaleX")

		let handScaleYAnimation = CAKeyframeAnimation(keyPath: "transform.scale.y")
		handScaleYAnimation.duration = 15.900
		handScaleYAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		handScaleYAnimation.keyTimes = [0.000 as Float, 0.950 as Float, 0.965 as Float, 1.000 as Float]
		handScaleYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		handScaleYAnimation.beginTime = beginTime
		handScaleYAnimation.fillMode = fillMode
		handScaleYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["hand"]?.layer.addAnimation(handScaleYAnimation, forKey:"story3_ScaleY")

		let handTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		handTranslationXAnimation.duration = 15.900
		handTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -70.000 as Float, -70.000 as Float]
		handTranslationXAnimation.keyTimes = [0.000 as Float, 0.972 as Float, 0.994 as Float, 1.000 as Float]
		handTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		handTranslationXAnimation.beginTime = beginTime
		handTranslationXAnimation.fillMode = fillMode
		handTranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["hand"]?.layer.addAnimation(handTranslationXAnimation, forKey:"story3_TranslationX")

		let handTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		handTranslationYAnimation.duration = 15.900
		handTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float]
		handTranslationYAnimation.keyTimes = [0.000 as Float, 0.972 as Float, 1.000 as Float]
		handTranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		handTranslationYAnimation.beginTime = beginTime
		handTranslationYAnimation.fillMode = fillMode
		handTranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["hand"]?.layer.addAnimation(handTranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy6TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy6TranslationXAnimation.duration = 15.900
		soldadinhoCopy6TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 90.031 as Float, 90.031 as Float]
		soldadinhoCopy6TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy6TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy6TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy6TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy6TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 6"]?.layer.addAnimation(soldadinhoCopy6TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy6TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy6TranslationYAnimation.duration = 15.900
		soldadinhoCopy6TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -81.100 as Float, -81.100 as Float]
		soldadinhoCopy6TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy6TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy6TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy6TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy6TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 6"]?.layer.addAnimation(soldadinhoCopy6TranslationYAnimation, forKey:"story3_TranslationY")

		let fala5MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		fala5MaskTranslationXAnimation.duration = 15.900
		fala5MaskTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 1680.000 as Float, 1680.000 as Float]
		fala5MaskTranslationXAnimation.keyTimes = [0.000 as Float, 0.667 as Float, 0.708 as Float, 1.000 as Float]
		fala5MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fala5MaskTranslationXAnimation.beginTime = beginTime
		fala5MaskTranslationXAnimation.fillMode = fillMode
		fala5MaskTranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Fala5_mask"]?.layer.addAnimation(fala5MaskTranslationXAnimation, forKey:"story3_TranslationX")

		let fala5MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		fala5MaskTranslationYAnimation.duration = 15.900
		fala5MaskTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float]
		fala5MaskTranslationYAnimation.keyTimes = [0.000 as Float, 0.667 as Float, 1.000 as Float]
		fala5MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		fala5MaskTranslationYAnimation.beginTime = beginTime
		fala5MaskTranslationYAnimation.fillMode = fillMode
		fala5MaskTranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Fala5_mask"]?.layer.addAnimation(fala5MaskTranslationYAnimation, forKey:"story3_TranslationY")

		let fala3MaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		fala3MaskTranslationXAnimation.duration = 15.900
		fala3MaskTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, 1580.000 as Float, 1580.000 as Float, 0.000 as Float, 0.000 as Float]
		fala3MaskTranslationXAnimation.keyTimes = [0.000 as Float, 0.025 as Float, 0.063 as Float, 0.616 as Float, 0.664 as Float, 1.000 as Float]
		fala3MaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming, linearTiming, linearTiming]
		fala3MaskTranslationXAnimation.beginTime = beginTime
		fala3MaskTranslationXAnimation.fillMode = fillMode
		fala3MaskTranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask"]?.layer.addAnimation(fala3MaskTranslationXAnimation, forKey:"story3_TranslationX")

		let fala3MaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		fala3MaskTranslationYAnimation.duration = 15.900
		fala3MaskTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float, 0.000 as Float]
		fala3MaskTranslationYAnimation.keyTimes = [0.000 as Float, 0.025 as Float, 0.616 as Float, 1.000 as Float]
		fala3MaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		fala3MaskTranslationYAnimation.beginTime = beginTime
		fala3MaskTranslationYAnimation.fillMode = fillMode
		fala3MaskTranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Fala3_mask"]?.layer.addAnimation(fala3MaskTranslationYAnimation, forKey:"story3_TranslationY")

		let soldadinhoCopy11TranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopy11TranslationXAnimation.duration = 15.900
		soldadinhoCopy11TranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -78.417 as Float, -78.417 as Float]
		soldadinhoCopy11TranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy11TranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy11TranslationXAnimation.beginTime = beginTime
		soldadinhoCopy11TranslationXAnimation.fillMode = fillMode
		soldadinhoCopy11TranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 11"]?.layer.addAnimation(soldadinhoCopy11TranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopy11TranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopy11TranslationYAnimation.duration = 15.900
		soldadinhoCopy11TranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -2.237 as Float, -2.237 as Float]
		soldadinhoCopy11TranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopy11TranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopy11TranslationYAnimation.beginTime = beginTime
		soldadinhoCopy11TranslationYAnimation.fillMode = fillMode
		soldadinhoCopy11TranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy 11"]?.layer.addAnimation(soldadinhoCopy11TranslationYAnimation, forKey:"story3_TranslationY")

		let leoMelhorOpacityAnimation = CAKeyframeAnimation(keyPath: "opacity")
		leoMelhorOpacityAnimation.duration = 15.900
		leoMelhorOpacityAnimation.values = [0.000 as Float, 0.000 as Float, 1.000 as Float, 1.000 as Float]
		leoMelhorOpacityAnimation.keyTimes = [0.000 as Float, 0.085 as Float, 0.119 as Float, 1.000 as Float]
		leoMelhorOpacityAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		leoMelhorOpacityAnimation.beginTime = beginTime
		leoMelhorOpacityAnimation.fillMode = fillMode
		leoMelhorOpacityAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Leo melhor"]?.layer.addAnimation(leoMelhorOpacityAnimation, forKey:"story3_Opacity")

		let soldadinhoCopyTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		soldadinhoCopyTranslationXAnimation.duration = 15.900
		soldadinhoCopyTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -88.268 as Float, -88.268 as Float]
		soldadinhoCopyTranslationXAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopyTranslationXAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopyTranslationXAnimation.beginTime = beginTime
		soldadinhoCopyTranslationXAnimation.fillMode = fillMode
		soldadinhoCopyTranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy"]?.layer.addAnimation(soldadinhoCopyTranslationXAnimation, forKey:"story3_TranslationX")

		let soldadinhoCopyTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		soldadinhoCopyTranslationYAnimation.duration = 15.900
		soldadinhoCopyTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, -92.908 as Float, -92.908 as Float]
		soldadinhoCopyTranslationYAnimation.keyTimes = [0.000 as Float, 0.711 as Float, 0.849 as Float, 1.000 as Float]
		soldadinhoCopyTranslationYAnimation.timingFunctions = [linearTiming, linearTiming, linearTiming]
		soldadinhoCopyTranslationYAnimation.beginTime = beginTime
		soldadinhoCopyTranslationYAnimation.fillMode = fillMode
		soldadinhoCopyTranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Soldadinho Copy"]?.layer.addAnimation(soldadinhoCopyTranslationYAnimation, forKey:"story3_TranslationY")

		let movementMaskTranslationXAnimation = CAKeyframeAnimation(keyPath: "transform.translation.x")
		movementMaskTranslationXAnimation.duration = 15.900
		movementMaskTranslationXAnimation.values = [0.000 as Float, 0.000 as Float, -65.000 as Float]
		movementMaskTranslationXAnimation.keyTimes = [0.000 as Float, 0.965 as Float, 1.000 as Float]
		movementMaskTranslationXAnimation.timingFunctions = [linearTiming, linearTiming]
		movementMaskTranslationXAnimation.beginTime = beginTime
		movementMaskTranslationXAnimation.fillMode = fillMode
		movementMaskTranslationXAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Movement_mask"]?.layer.addAnimation(movementMaskTranslationXAnimation, forKey:"story3_TranslationX")

		let movementMaskTranslationYAnimation = CAKeyframeAnimation(keyPath: "transform.translation.y")
		movementMaskTranslationYAnimation.duration = 15.900
		movementMaskTranslationYAnimation.values = [0.000 as Float, 0.000 as Float, 0.000 as Float]
		movementMaskTranslationYAnimation.keyTimes = [0.000 as Float, 0.965 as Float, 1.000 as Float]
		movementMaskTranslationYAnimation.timingFunctions = [linearTiming, linearTiming]
		movementMaskTranslationYAnimation.beginTime = beginTime
		movementMaskTranslationYAnimation.fillMode = fillMode
		movementMaskTranslationYAnimation.removedOnCompletion = removedOnCompletion
		self.viewsByName["Movement_mask"]?.layer.addAnimation(movementMaskTranslationYAnimation, forKey:"story3_TranslationY")
	}

	func removeStory3Animation() {
		self.layer.removeAnimationForKey("Story3")
		self.viewsByName["Soldadinho Copy 3"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 3"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 4"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 4"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Leo falando"]?.layer.removeAnimationForKey("story3_ScaleX")
		self.viewsByName["Leo falando"]?.layer.removeAnimationForKey("story3_ScaleY")
		self.viewsByName["Leo Machucado"]?.layer.removeAnimationForKey("story3_ScaleX")
		self.viewsByName["Leo Machucado"]?.layer.removeAnimationForKey("story3_ScaleY")
		self.viewsByName["Tela Toda"]?.layer.removeAnimationForKey("story3_Opacity")
		self.viewsByName["Sangue Copy"]?.layer.removeAnimationForKey("story3_Opacity")
		self.viewsByName["Soldadinho Copy 2"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 2"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 10"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 10"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 8"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 8"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 7"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 7"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 9"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 9"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 5"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 5"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["hand"]?.layer.removeAnimationForKey("story3_ScaleX")
		self.viewsByName["hand"]?.layer.removeAnimationForKey("story3_ScaleY")
		self.viewsByName["hand"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["hand"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 6"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 6"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Fala5_mask"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Fala5_mask"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Fala3_mask"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Fala3_mask"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Soldadinho Copy 11"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy 11"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Leo melhor"]?.layer.removeAnimationForKey("story3_Opacity")
		self.viewsByName["Soldadinho Copy"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Soldadinho Copy"]?.layer.removeAnimationForKey("story3_TranslationY")
		self.viewsByName["Movement_mask"]?.layer.removeAnimationForKey("story3_TranslationX")
		self.viewsByName["Movement_mask"]?.layer.removeAnimationForKey("story3_TranslationY")
	}

	override func animationDidStop(anim: CAAnimation, finished flag: Bool) {
		if let completion = self.animationCompletions[anim] {
			self.animationCompletions.removeValueForKey(anim)
			completion(flag)
		}
	}

	override func removeAllAnimations() {
		for subview in viewsByName.values {
			subview.layer.removeAllAnimations()
		}
		self.layer.removeAnimationForKey("Story3")
	}
}