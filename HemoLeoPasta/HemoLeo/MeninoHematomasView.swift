//
// MeninoHematomasView.swift
// Generated by Core Animator version 1.3.2 on 01/12/16.
//
// DO NOT MODIFY THIS FILE. IT IS AUTO-GENERATED AND WILL BE OVERWRITTEN
//

import UIKit

protocol MeninoHematomasViewDelegate: class {
	func botãoDesativado(botãoDesativado: UIButton)
}

private class MeninoHematomasPassthroughView: UIView {
    override func point(inside point: CGPoint, with event: UIEvent?) -> Bool {
        for subview in subviews as [UIView] {
            if subview.point(inside: convert(point, to: subview), with: event) { return true }
        }
        return false
    }
}

@IBDesignable
class MeninoHematomasView : UIView, CAAnimationDelegate {

	var viewsByName: [String : UIView]!

	// - MARK: Life Cycle

	convenience init() {
		self.init(frame: CGRect(x: 0, y: 0, width: 414, height: 736))
	}

	override init(frame: CGRect) {
		super.init(frame: frame)
		self.setupHierarchy()
	}

	required init?(coder aDecoder: NSCoder) {
		super.init(coder: aDecoder)
		self.setupHierarchy()
	}

	weak var meninoHematomasViewDelegate: MeninoHematomasViewDelegate?

	// - MARK: Scaling

	override func layoutSubviews() {
		super.layoutSubviews()

		if let scalingView = self.viewsByName["__scaling__"] {
			var xScale = self.bounds.size.width / scalingView.bounds.size.width
			var yScale = self.bounds.size.height / scalingView.bounds.size.height
			switch contentMode {
			case .scaleToFill:
				break
			case .scaleAspectFill:
				let scale = max(xScale, yScale)
				xScale = scale
				yScale = scale
			default:
				let scale = min(xScale, yScale)
				xScale = scale
				yScale = scale
			}
			scalingView.transform = CGAffineTransform(scaleX: xScale, y: yScale)
			scalingView.center = CGPoint(x:self.bounds.midX, y:self.bounds.midY)
		}
	}

	// - MARK: Setup

	func setupHierarchy() {
		var viewsByName: [String : UIView] = [:]
		let bundle = Bundle(for:type(of: self))
		let __scaling__ = UIView()
		__scaling__.bounds = CGRect(x:0, y:0, width:414, height:736)
		__scaling__.center = CGPoint(x:207.0, y:368.0)
		__scaling__.layer.masksToBounds = true
		self.addSubview(__scaling__)
		viewsByName["__scaling__"] = __scaling__

		let menino__root = MeninoHematomasPassthroughView()
		let menino__xScale = MeninoHematomasPassthroughView()
		let menino__yScale = MeninoHematomasPassthroughView()
		let menino = UIImageView()
		let imgMenino = UIImage(named:"Menino.png", in: bundle, compatibleWith: nil)
		if imgMenino == nil {
			print("** Warning: Could not create image from 'Menino.png'")
		}
		menino.image = imgMenino
		menino.contentMode = .center
		menino.bounds = CGRect(x:0, y:0, width:294.0, height:992.0)
		menino__root.layer.position = CGPoint(x:207.000, y:368.000)
		menino__xScale.transform = CGAffineTransform(scaleX: 0.68, y: 1.00)
		menino__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 0.68)
		menino__root.transform = CGAffineTransform(rotationAngle: 0.000)
		__scaling__.addSubview(menino__root)
		menino__root.addSubview(menino__xScale)
		menino__xScale.addSubview(menino__yScale)
		menino__yScale.addSubview(menino)
		__scaling__.addSubview(menino__root)
		viewsByName["Menino__root"] = menino__root
		viewsByName["Menino__xScale"] = menino__xScale
		viewsByName["Menino__yScale"] = menino__yScale
		viewsByName["Menino"] = menino

		let botãoDesativadoHematomaAE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAE = UIButton(type: .custom)
		let imgBotãoDesativadoHematoma = UIImage(named:"BotãoDesativadoHematoma.png", in: bundle, compatibleWith: nil)
        let imgAtivado = #imageLiteral(resourceName: "BotãoAtivoHematoma")
        
		if imgBotãoDesativadoHematoma == nil {
			print("** Warning: Could not create image from 'BotãoDesativadoHematoma.png'")
		}
        
        botãoDesativadoHematomaAE.accessibilityIdentifier = "Ante-braço Esquerdo"
        botãoDesativadoHematomaAE.tag = 0
		botãoDesativadoHematomaAE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaAE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaAE.contentMode = .center
		botãoDesativadoHematomaAE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaAE__root.layer.position = CGPoint(x:127.662, y:358.316)
		botãoDesativadoHematomaAE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaAE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaAE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaAE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaAEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaAE__root)
		botãoDesativadoHematomaAE__root.addSubview(botãoDesativadoHematomaAE__xScale)
		botãoDesativadoHematomaAE__xScale.addSubview(botãoDesativadoHematomaAE__yScale)
		botãoDesativadoHematomaAE__yScale.addSubview(botãoDesativadoHematomaAE)
		__scaling__.addSubview(botãoDesativadoHematomaAE__root)
		viewsByName["BotãoDesativadoHematomaAE__root"] = botãoDesativadoHematomaAE__root
		viewsByName["BotãoDesativadoHematomaAE__xScale"] = botãoDesativadoHematomaAE__xScale
		viewsByName["BotãoDesativadoHematomaAE__yScale"] = botãoDesativadoHematomaAE__yScale
		viewsByName["BotãoDesativadoHematomaAE"] = botãoDesativadoHematomaAE

		let botãoDesativadoHematomaDE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDE = UIButton(type: .custom)
        
        botãoDesativadoHematomaDE.accessibilityIdentifier = "Deltóide Esquerdo"
        botãoDesativadoHematomaDE.tag = 1
		botãoDesativadoHematomaDE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaDE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaDE.contentMode = .center
		botãoDesativadoHematomaDE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaDE__root.layer.position = CGPoint(x:162.090, y:175.371)
		botãoDesativadoHematomaDE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaDE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaDE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaDE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaDEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaDE__root)
		botãoDesativadoHematomaDE__root.addSubview(botãoDesativadoHematomaDE__xScale)
		botãoDesativadoHematomaDE__xScale.addSubview(botãoDesativadoHematomaDE__yScale)
		botãoDesativadoHematomaDE__yScale.addSubview(botãoDesativadoHematomaDE)
		__scaling__.addSubview(botãoDesativadoHematomaDE__root)
		viewsByName["BotãoDesativadoHematomaDE__root"] = botãoDesativadoHematomaDE__root
		viewsByName["BotãoDesativadoHematomaDE__xScale"] = botãoDesativadoHematomaDE__xScale
		viewsByName["BotãoDesativadoHematomaDE__yScale"] = botãoDesativadoHematomaDE__yScale
		viewsByName["BotãoDesativadoHematomaDE"] = botãoDesativadoHematomaDE

		let botãoDesativadoHematomaCTD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTD = UIButton(type: .custom)
        
        botãoDesativadoHematomaCTD.accessibilityIdentifier = "Cotovelo Direito"
        botãoDesativadoHematomaCTD.tag = 2
		botãoDesativadoHematomaCTD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaCTD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaCTD.contentMode = .center
		botãoDesativadoHematomaCTD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaCTD__root.layer.position = CGPoint(x:280.318, y:305.000)
		botãoDesativadoHematomaCTD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCTD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCTD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaCTD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaCTDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaCTD__root)
		botãoDesativadoHematomaCTD__root.addSubview(botãoDesativadoHematomaCTD__xScale)
		botãoDesativadoHematomaCTD__xScale.addSubview(botãoDesativadoHematomaCTD__yScale)
		botãoDesativadoHematomaCTD__yScale.addSubview(botãoDesativadoHematomaCTD)
		__scaling__.addSubview(botãoDesativadoHematomaCTD__root)
		viewsByName["BotãoDesativadoHematomaCTD__root"] = botãoDesativadoHematomaCTD__root
		viewsByName["BotãoDesativadoHematomaCTD__xScale"] = botãoDesativadoHematomaCTD__xScale
		viewsByName["BotãoDesativadoHematomaCTD__yScale"] = botãoDesativadoHematomaCTD__yScale
		viewsByName["BotãoDesativadoHematomaCTD"] = botãoDesativadoHematomaCTD

		let botãoDesativadoHematomaCTE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCTE = UIButton(type: .custom)
        
        botãoDesativadoHematomaCTE.accessibilityIdentifier = "Cotovelo Esquerdo"
        botãoDesativadoHematomaCTE.tag = 3
		botãoDesativadoHematomaCTE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaCTE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaCTE.contentMode = .center
		botãoDesativadoHematomaCTE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaCTE__root.layer.position = CGPoint(x:131.077, y:305.066)
		botãoDesativadoHematomaCTE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCTE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCTE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaCTE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaCTEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaCTE__root)
		botãoDesativadoHematomaCTE__root.addSubview(botãoDesativadoHematomaCTE__xScale)
		botãoDesativadoHematomaCTE__xScale.addSubview(botãoDesativadoHematomaCTE__yScale)
		botãoDesativadoHematomaCTE__yScale.addSubview(botãoDesativadoHematomaCTE)
		__scaling__.addSubview(botãoDesativadoHematomaCTE__root)
		viewsByName["BotãoDesativadoHematomaCTE__root"] = botãoDesativadoHematomaCTE__root
		viewsByName["BotãoDesativadoHematomaCTE__xScale"] = botãoDesativadoHematomaCTE__xScale
		viewsByName["BotãoDesativadoHematomaCTE__yScale"] = botãoDesativadoHematomaCTE__yScale
		viewsByName["BotãoDesativadoHematomaCTE"] = botãoDesativadoHematomaCTE

		let botãoDesativadoHematomaAD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaAD = UIButton(type: .custom)
        
        botãoDesativadoHematomaAD.accessibilityIdentifier = "Ante-braço Direito"
        botãoDesativadoHematomaAD.tag = 4
		botãoDesativadoHematomaAD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaAD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaAD.contentMode = .center
		botãoDesativadoHematomaAD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaAD__root.layer.position = CGPoint(x:287.094, y:358.000)
		botãoDesativadoHematomaAD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaAD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaAD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaAD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaADPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaAD__root)
		botãoDesativadoHematomaAD__root.addSubview(botãoDesativadoHematomaAD__xScale)
		botãoDesativadoHematomaAD__xScale.addSubview(botãoDesativadoHematomaAD__yScale)
		botãoDesativadoHematomaAD__yScale.addSubview(botãoDesativadoHematomaAD)
		__scaling__.addSubview(botãoDesativadoHematomaAD__root)
		viewsByName["BotãoDesativadoHematomaAD__root"] = botãoDesativadoHematomaAD__root
		viewsByName["BotãoDesativadoHematomaAD__xScale"] = botãoDesativadoHematomaAD__xScale
		viewsByName["BotãoDesativadoHematomaAD__yScale"] = botãoDesativadoHematomaAD__yScale
		viewsByName["BotãoDesativadoHematomaAD"] = botãoDesativadoHematomaAD

		let botãoDesativadoHematomaCE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCE = UIButton(type: .custom)
        
        botãoDesativadoHematomaCE.accessibilityIdentifier = "Coxa Esquerda"
        botãoDesativadoHematomaCE.tag = 5
		botãoDesativadoHematomaCE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaCE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaCE.contentMode = .center
		botãoDesativadoHematomaCE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaCE__root.layer.position = CGPoint(x:172.538, y:480.000)
		botãoDesativadoHematomaCE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaCE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaCEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaCE__root)
		botãoDesativadoHematomaCE__root.addSubview(botãoDesativadoHematomaCE__xScale)
		botãoDesativadoHematomaCE__xScale.addSubview(botãoDesativadoHematomaCE__yScale)
		botãoDesativadoHematomaCE__yScale.addSubview(botãoDesativadoHematomaCE)
		__scaling__.addSubview(botãoDesativadoHematomaCE__root)
		viewsByName["BotãoDesativadoHematomaCE__root"] = botãoDesativadoHematomaCE__root
		viewsByName["BotãoDesativadoHematomaCE__xScale"] = botãoDesativadoHematomaCE__xScale
		viewsByName["BotãoDesativadoHematomaCE__yScale"] = botãoDesativadoHematomaCE__yScale
		viewsByName["BotãoDesativadoHematomaCE"] = botãoDesativadoHematomaCE

		let botãoDesativadoHematomaJE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJE = UIButton(type: .custom)
        
        botãoDesativadoHematomaJE.accessibilityIdentifier = "Joelho Esquerdo"
        botãoDesativadoHematomaJE.tag = 6
		botãoDesativadoHematomaJE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaJE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaJE.contentMode = .center
		botãoDesativadoHematomaJE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaJE__root.layer.position = CGPoint(x:171.522, y:536.459)
		botãoDesativadoHematomaJE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaJE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaJE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaJE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaJEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaJE__root)
		botãoDesativadoHematomaJE__root.addSubview(botãoDesativadoHematomaJE__xScale)
		botãoDesativadoHematomaJE__xScale.addSubview(botãoDesativadoHematomaJE__yScale)
		botãoDesativadoHematomaJE__yScale.addSubview(botãoDesativadoHematomaJE)
		__scaling__.addSubview(botãoDesativadoHematomaJE__root)
		viewsByName["BotãoDesativadoHematomaJE__root"] = botãoDesativadoHematomaJE__root
		viewsByName["BotãoDesativadoHematomaJE__xScale"] = botãoDesativadoHematomaJE__xScale
		viewsByName["BotãoDesativadoHematomaJE__yScale"] = botãoDesativadoHematomaJE__yScale
		viewsByName["BotãoDesativadoHematomaJE"] = botãoDesativadoHematomaJE

		let botãoDesativadoHematomaCD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaCD = UIButton(type: .custom)
        
        botãoDesativadoHematomaCD.accessibilityIdentifier = "Coxa Esquerda"
        botãoDesativadoHematomaCD.tag = 7
		botãoDesativadoHematomaCD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaCD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaCD.contentMode = .center
		botãoDesativadoHematomaCD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaCD__root.layer.position = CGPoint(x:240.375, y:480.000)
		botãoDesativadoHematomaCD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaCD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaCD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaCDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaCD__root)
		botãoDesativadoHematomaCD__root.addSubview(botãoDesativadoHematomaCD__xScale)
		botãoDesativadoHematomaCD__xScale.addSubview(botãoDesativadoHematomaCD__yScale)
		botãoDesativadoHematomaCD__yScale.addSubview(botãoDesativadoHematomaCD)
		__scaling__.addSubview(botãoDesativadoHematomaCD__root)
		viewsByName["BotãoDesativadoHematomaCD__root"] = botãoDesativadoHematomaCD__root
		viewsByName["BotãoDesativadoHematomaCD__xScale"] = botãoDesativadoHematomaCD__xScale
		viewsByName["BotãoDesativadoHematomaCD__yScale"] = botãoDesativadoHematomaCD__yScale
		viewsByName["BotãoDesativadoHematomaCD"] = botãoDesativadoHematomaCD

		let botãoDesativadoHematomaJD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaJD = UIButton(type: .custom)
        
        botãoDesativadoHematomaJD.accessibilityIdentifier = "Joelho Direito"
        botãoDesativadoHematomaJD.tag = 8
		botãoDesativadoHematomaJD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaJD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaJD.contentMode = .center
		botãoDesativadoHematomaJD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaJD__root.layer.position = CGPoint(x:242.569, y:536.000)
		botãoDesativadoHematomaJD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaJD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaJD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaJD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaJDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaJD__root)
		botãoDesativadoHematomaJD__root.addSubview(botãoDesativadoHematomaJD__xScale)
		botãoDesativadoHematomaJD__xScale.addSubview(botãoDesativadoHematomaJD__yScale)
		botãoDesativadoHematomaJD__yScale.addSubview(botãoDesativadoHematomaJD)
		__scaling__.addSubview(botãoDesativadoHematomaJD__root)
		viewsByName["BotãoDesativadoHematomaJD__root"] = botãoDesativadoHematomaJD__root
		viewsByName["BotãoDesativadoHematomaJD__xScale"] = botãoDesativadoHematomaJD__xScale
		viewsByName["BotãoDesativadoHematomaJD__yScale"] = botãoDesativadoHematomaJD__yScale
		viewsByName["BotãoDesativadoHematomaJD"] = botãoDesativadoHematomaJD

		let botãoDesativadoHematomaPE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPE = UIButton(type: .custom)
        
        botãoDesativadoHematomaPE.accessibilityIdentifier = "Panturrilha Esquerda"
        botãoDesativadoHematomaPE.tag = 9
		botãoDesativadoHematomaPE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaPE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaPE.contentMode = .center
		botãoDesativadoHematomaPE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaPE__root.layer.position = CGPoint(x:150.231, y:600.000)
		botãoDesativadoHematomaPE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaPE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaPE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaPE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaPEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaPE__root)
		botãoDesativadoHematomaPE__root.addSubview(botãoDesativadoHematomaPE__xScale)
		botãoDesativadoHematomaPE__xScale.addSubview(botãoDesativadoHematomaPE__yScale)
		botãoDesativadoHematomaPE__yScale.addSubview(botãoDesativadoHematomaPE)
		__scaling__.addSubview(botãoDesativadoHematomaPE__root)
		viewsByName["BotãoDesativadoHematomaPE__root"] = botãoDesativadoHematomaPE__root
		viewsByName["BotãoDesativadoHematomaPE__xScale"] = botãoDesativadoHematomaPE__xScale
		viewsByName["BotãoDesativadoHematomaPE__yScale"] = botãoDesativadoHematomaPE__yScale
		viewsByName["BotãoDesativadoHematomaPE"] = botãoDesativadoHematomaPE

		let botãoDesativadoHematomaTE__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTE__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTE__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTE = UIButton(type: .custom)
        
        botãoDesativadoHematomaTE.accessibilityIdentifier = "Tornozelo Esquerdo"
        botãoDesativadoHematomaTE.tag = 10
		botãoDesativadoHematomaTE.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaTE.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaTE.contentMode = .center
		botãoDesativadoHematomaTE.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaTE__root.layer.position = CGPoint(x:171.012, y:669.078)
		botãoDesativadoHematomaTE__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaTE__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaTE__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaTE.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaTEPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaTE__root)
		botãoDesativadoHematomaTE__root.addSubview(botãoDesativadoHematomaTE__xScale)
		botãoDesativadoHematomaTE__xScale.addSubview(botãoDesativadoHematomaTE__yScale)
		botãoDesativadoHematomaTE__yScale.addSubview(botãoDesativadoHematomaTE)
		__scaling__.addSubview(botãoDesativadoHematomaTE__root)
		viewsByName["BotãoDesativadoHematomaTE__root"] = botãoDesativadoHematomaTE__root
		viewsByName["BotãoDesativadoHematomaTE__xScale"] = botãoDesativadoHematomaTE__xScale
		viewsByName["BotãoDesativadoHematomaTE__yScale"] = botãoDesativadoHematomaTE__yScale
		viewsByName["BotãoDesativadoHematomaTE"] = botãoDesativadoHematomaTE

		let botãoDesativadoHematomaTD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaTD = UIButton(type: .custom)
        
        botãoDesativadoHematomaTD.accessibilityIdentifier = "Tornozelo Direito"
        botãoDesativadoHematomaTD.tag = 11
		botãoDesativadoHematomaTD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaTD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaTD.contentMode = .center
		botãoDesativadoHematomaTD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaTD__root.layer.position = CGPoint(x:244.025, y:669.000)
		botãoDesativadoHematomaTD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaTD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaTD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaTD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaTDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaTD__root)
		botãoDesativadoHematomaTD__root.addSubview(botãoDesativadoHematomaTD__xScale)
		botãoDesativadoHematomaTD__xScale.addSubview(botãoDesativadoHematomaTD__yScale)
		botãoDesativadoHematomaTD__yScale.addSubview(botãoDesativadoHematomaTD)
		__scaling__.addSubview(botãoDesativadoHematomaTD__root)
		viewsByName["BotãoDesativadoHematomaTD__root"] = botãoDesativadoHematomaTD__root
		viewsByName["BotãoDesativadoHematomaTD__xScale"] = botãoDesativadoHematomaTD__xScale
		viewsByName["BotãoDesativadoHematomaTD__yScale"] = botãoDesativadoHematomaTD__yScale
		viewsByName["BotãoDesativadoHematomaTD"] = botãoDesativadoHematomaTD

		let botãoDesativadoHematomaPD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaPD = UIButton(type: .custom)
        
        botãoDesativadoHematomaPD.accessibilityIdentifier = "Panturrilha Direita"
        botãoDesativadoHematomaPD.tag = 12
		botãoDesativadoHematomaPD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaPD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaPD.contentMode = .center
		botãoDesativadoHematomaPD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaPD__root.layer.position = CGPoint(x:264.966, y:600.000)
		botãoDesativadoHematomaPD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaPD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaPD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaPD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaPDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaPD__root)
		botãoDesativadoHematomaPD__root.addSubview(botãoDesativadoHematomaPD__xScale)
		botãoDesativadoHematomaPD__xScale.addSubview(botãoDesativadoHematomaPD__yScale)
		botãoDesativadoHematomaPD__yScale.addSubview(botãoDesativadoHematomaPD)
		__scaling__.addSubview(botãoDesativadoHematomaPD__root)
		viewsByName["BotãoDesativadoHematomaPD__root"] = botãoDesativadoHematomaPD__root
		viewsByName["BotãoDesativadoHematomaPD__xScale"] = botãoDesativadoHematomaPD__xScale
		viewsByName["BotãoDesativadoHematomaPD__yScale"] = botãoDesativadoHematomaPD__yScale
		viewsByName["BotãoDesativadoHematomaPD"] = botãoDesativadoHematomaPD

		let botãoDesativadoHematomaDD__root = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDD__xScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDD__yScale = MeninoHematomasPassthroughView()
		let botãoDesativadoHematomaDD = UIButton(type: .custom)
        
        botãoDesativadoHematomaDD.accessibilityIdentifier = "Deltóide Direito"
        botãoDesativadoHematomaDD.tag = 13
		botãoDesativadoHematomaDD.setBackgroundImage(imgBotãoDesativadoHematoma, for:.normal)
        botãoDesativadoHematomaDD.setBackgroundImage(imgAtivado, for:.selected)
		botãoDesativadoHematomaDD.contentMode = .center
		botãoDesativadoHematomaDD.bounds = CGRect(x:0, y:0, width:44.0, height:44.0)
		botãoDesativadoHematomaDD__root.layer.position = CGPoint(x:256.656, y:176.504)
		botãoDesativadoHematomaDD__xScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaDD__yScale.transform = CGAffineTransform(scaleX: 1.00, y: 1.00)
		botãoDesativadoHematomaDD__root.transform = CGAffineTransform(rotationAngle: 0.000)
		botãoDesativadoHematomaDD.addTarget(self, action:#selector(MeninoHematomasView.actionBotãoDesativadoHematomaDDPressed), for: .touchUpInside)
		__scaling__.addSubview(botãoDesativadoHematomaDD__root)
		botãoDesativadoHematomaDD__root.addSubview(botãoDesativadoHematomaDD__xScale)
		botãoDesativadoHematomaDD__xScale.addSubview(botãoDesativadoHematomaDD__yScale)
		botãoDesativadoHematomaDD__yScale.addSubview(botãoDesativadoHematomaDD)
		__scaling__.addSubview(botãoDesativadoHematomaDD__root)
		viewsByName["BotãoDesativadoHematomaDD__root"] = botãoDesativadoHematomaDD__root
		viewsByName["BotãoDesativadoHematomaDD__xScale"] = botãoDesativadoHematomaDD__xScale
		viewsByName["BotãoDesativadoHematomaDD__yScale"] = botãoDesativadoHematomaDD__yScale
		viewsByName["BotãoDesativadoHematomaDD"] = botãoDesativadoHematomaDD

		self.viewsByName = viewsByName
	}

	func actionBotãoDesativadoHematomaAEPressed(botãoDesativadoHematomaAE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaAE)
	}

	func actionBotãoDesativadoHematomaDEPressed(botãoDesativadoHematomaDE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaDE)
	}

	func actionBotãoDesativadoHematomaCTDPressed(botãoDesativadoHematomaCTD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaCTD)
	}

	func actionBotãoDesativadoHematomaCTEPressed(botãoDesativadoHematomaCTE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaCTE)
	}

	func actionBotãoDesativadoHematomaADPressed(botãoDesativadoHematomaAD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaAD)
	}

	func actionBotãoDesativadoHematomaCEPressed(botãoDesativadoHematomaCE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaCE)
	}

	func actionBotãoDesativadoHematomaJEPressed(botãoDesativadoHematomaJE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaJE)
	}

	func actionBotãoDesativadoHematomaCDPressed(botãoDesativadoHematomaCD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaCD)
	}

	func actionBotãoDesativadoHematomaJDPressed(botãoDesativadoHematomaJD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaJD)
	}

	func actionBotãoDesativadoHematomaPEPressed(botãoDesativadoHematomaPE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaPE)
	}

	func actionBotãoDesativadoHematomaTEPressed(botãoDesativadoHematomaTE: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaTE)
	}

	func actionBotãoDesativadoHematomaTDPressed(botãoDesativadoHematomaTD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaTD)
	}

	func actionBotãoDesativadoHematomaPDPressed(botãoDesativadoHematomaPD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaPD)
	}

	func actionBotãoDesativadoHematomaDDPressed(botãoDesativadoHematomaDD: UIButton) {
		meninoHematomasViewDelegate?.botãoDesativado(botãoDesativado: botãoDesativadoHematomaDD)
	}
}
